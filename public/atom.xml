<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>逍遥★俊子</title>
  
  
  <link href="https://huangjun0210.github.io/atom.xml" rel="self"/>
  
  <link href="https://huangjun0210.github.io/"/>
  <updated>2022-11-06T14:07:34.158Z</updated>
  <id>https://huangjun0210.github.io/</id>
  
  <author>
    <name>Huangjun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HashMap的工作原理</title>
    <link href="https://huangjun0210.github.io/2022/11/06/HashMap%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>https://huangjun0210.github.io/2022/11/06/HashMap%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</id>
    <published>2022-11-06T14:08:06.991Z</published>
    <updated>2022-11-06T14:07:34.158Z</updated>
    
    <content type="html"><![CDATA[<p>Java 中的 HashMap 是以键值对 (key-value) 的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合 / 从集合添加和检索元素。当调用 put() 方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。 如果 key 已经存在了，value 会被更新成新值。 HashMap 的一些重要的特性是它的容量 (capacity)，负载因子 (load factor) 和扩容极限(threshold resizing)。</p><span id="more"></span><h2 id="1-HashMap的存储结构"><a href="#1-HashMap的存储结构" class="headerlink" title="1. HashMap的存储结构"></a>1. HashMap的存储结构</h2><p>数组+链表+红黑树，当链表长度大于8时，链表的数据将会以红黑树的形式进行存储，当链表长度降到6时为链表形式存储</p><h2 id="2-如何解决Hash冲突"><a href="#2-如何解决Hash冲突" class="headerlink" title="2. 如何解决Hash冲突"></a>2. 如何解决Hash冲突</h2><p>如果发生Hash冲突，Hashmap通过链表将产生冲突的元素组织起来，在Java 8中，如果一个bucket中冲突的元素超过某个限制(默认是8)，则使用红黑树来替换链表，从而提高速度。</p><h2 id="3-Hashmap-扩容"><a href="#3-Hashmap-扩容" class="headerlink" title="3. Hashmap 扩容"></a>3. Hashmap 扩容</h2><p>当 hashmap 中的元素个数超过数组大小 loadFactor 时，就会进行数组扩容， loadFactor 的默认值为 0。75，也就是说，默认情况下，数组大小为 16，那么当 hashmap 中元素个数超过 160。75=12 的时候，就把数组的大小扩展为 216=32，即扩大一倍，然后重新计算每个元素在数组中的位置，而这是一个非常消耗性能的操作，所以如果我们已经预知 hashmap 中元素的个数，那么预设元素的个数能够有效的提高 hashmap 的性能。比如说，我们有 1000 个元素 new HashMap(1000)，但是理论上来讲 new HashMap(1024) 更合适，不过上面 annegu 已经说过，即使是 1000，hashmap 也自动会将其设置为 1024。 但是 new HashMap(1024) 还不是更合适的，因为 0。75*1000 &lt; 1000，也就是说为了让 0。75 * size &gt; 1000，我们必须这样 new HashMap(2048) 才最合适，既考虑了 &amp; 的问题，也避免了 resize 的问题。</p><h2 id="4-Hashmap线程安全吗"><a href="#4-Hashmap线程安全吗" class="headerlink" title="4. Hashmap线程安全吗"></a>4. Hashmap线程安全吗</h2><p>Hashmap不是线程安全的。</p><p>HashTable和ConcuHashMap是线程安全的。</p><h3 id="4-1-HashTable"><a href="#4-1-HashTable" class="headerlink" title="4.1 HashTable"></a>4.1 HashTable</h3><p> HashTable线程安全实现是直接在关键方法上加了synchronized，但是只有一把锁。多线程访问同一个 Hashtable 就会直接造成锁冲突。（冲突概率很大，频繁加锁解锁又要耗费大量资源）size 属性也是通过 synchronized 来控制同步，也是比较慢的。一旦触发扩容，就由该线程完成整个扩容过程。这个过程会涉及到大量的元素拷贝，效率会非常低。</p><h3 id="4-2-ConcuHashMap"><a href="#4-2-ConcuHashMap" class="headerlink" title="4.2 ConcuHashMap"></a>4.2 ConcuHashMap</h3><p>相比于 Hashtable 做出了一系列的改进和优化。</p><p>每个bucket一把锁。</p><p>以 Java1.8 为例</p><ul><li><p>读操作没有加锁(但是使用了volatile 保证从内存读取结果)，只对写操作进行加锁（减少锁冲突概率）。</p></li><li><p>加锁的方式仍然 是synchronized， 但是不是锁整个对象，而是 “锁桶” (用每个链表的头结点作为锁对象)，大大降低了锁冲突的概率</p></li><li><p>充分利用 CAS 特性。比如 size 属性通过 CAS 来更新。避免出现重量级锁的情况。</p></li><li><p>优化了扩容方式： 化整为零发现需要扩容的线程，只需要创建一个新的数组，同时只搬几个元素过去。扩容期间，新老数组同时存在。后续每个来操作 ConcurrentHashMap 的线程，都会参与搬家的过程。每个操作负责搬运一小 部分元素。搬完最后一个元素再把老数组删掉。这个期间，插入只往新数组加。这个期间，查找需要同时查新数组和老数组。相当于将HashTable的单次扩容所消耗的大量时间平摊到多次put过程，减少cpu的平均负荷，优化了体验。</p></li></ul><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><ul><li>HashMap： 线程不安全。key 允许为 null 。</li><li>Hashtable： 线程安全。使用 synchronized 锁 Hashtable 对象，效率较低，key 不允许为 null。</li><li>ConcurrentHashMap： 线程安全。使用 synchronized 锁每个链表头结点， 锁冲突概率低，充分利用 CAS 机制， 优化了扩容方式，key 不允许为 null。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Java 中的 HashMap 是以键值对 (key-value) 的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合 / 从集合添加和检索元素。当调用 put() 方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。 如果 key 已经存在了，value 会被更新成新值。 HashMap 的一些重要的特性是它的容量 (capacity)，负载因子 (load factor) 和扩容极限(threshold resizing)。&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础" scheme="https://huangjun0210.github.io/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="面试" scheme="https://huangjun0210.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>秒杀整体解决方案</title>
    <link href="https://huangjun0210.github.io/2022/11/06/%E7%A7%92%E6%9D%80%E6%95%B4%E4%BD%93%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://huangjun0210.github.io/2022/11/06/%E7%A7%92%E6%9D%80%E6%95%B4%E4%BD%93%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2022-11-06T14:03:52.000Z</published>
    <updated>2022-11-06T14:45:57.341Z</updated>
    
    <content type="html"><![CDATA[<p>1。客户端。</p><p>2。dns。A记录（Address）：将域名和IP做对应。 一个域名对应多个IP。负载均衡。</p><p>3。cdn。内容网络分发。（CNAME记录：域名到域名的映射。）| cdn缓存。</p><p>动态数据</p><p>静态数据：非个性化的数据。通用的 商品列表，商品详情。图片类等。</p><p>4。网关（过滤器）/负载均衡。（鉴权，黑名单（redis（黑名单ip的字符串），if （字符串contains(客户端来源的ip)）），限流等）。</p><p>确定黑名单：没有固定的办法，看业务。（10s 来 5次，就算黑名单。key=ip，value：1，incr）</p><p>5。服务-api-xxx和服务-service-xxxx（）</p><p>6。缓存（读多写少）。异步（缓存）</p><p>7。DB层：分区（对一个文件的操作，负载成对多个文件的操作），读写分离，分库分表。</p><p>并发读，并发写。短时间内，大量请求。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1。客户端。&lt;/p&gt;
&lt;p&gt;2。dns。A记录（Address）：将域名和IP做对应。 一个域名对应多个IP。负载均衡。&lt;/p&gt;
&lt;p&gt;3。cdn。内容网络分发。（CNAME记录：域名到域名的映射。）| cdn缓存。&lt;/p&gt;
&lt;p&gt;动态数据&lt;/p&gt;
&lt;p&gt;静态数据：非个性化</summary>
      
    
    
    
    <category term="项目" scheme="https://huangjun0210.github.io/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="面试" scheme="https://huangjun0210.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>vagrant环境搭建</title>
    <link href="https://huangjun0210.github.io/2022/11/06/vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://huangjun0210.github.io/2022/11/06/vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2022-11-06T09:21:43.000Z</published>
    <updated>2022-11-06T14:07:34.159Z</updated>
    
    <content type="html"><![CDATA[<p>vagrant支持的provider包括virtualbox、hyperv、libvirt等。</p><p>virtualbox支持windows、linux、masoc的安装，因此本教程以virtualbox作为provider。</p><span id="more"></span><h2 id="1-安装virtualbox"><a href="#1-安装virtualbox" class="headerlink" title="1. 安装virtualbox"></a>1. 安装virtualbox</h2><p>点击进入<a href="https://www.virtualbox.org/wiki/Downloads">官网</a>下载virtualbox</p><p><img src="/2022/11/06/vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/virtualbox.png" alt="virtualbox"></p><p>此处可选择操作系统版本，选择Windows版本下载、安装(其他操作系统类似)。</p><p>安装过程比较简单，跟着指引即可。</p><h2 id="2-安装vagrant"><a href="#2-安装vagrant" class="headerlink" title="2. 安装vagrant"></a>2. 安装vagrant</h2><p>点击进入<a href="https://developer.hashicorp.com/vagrant/downloads">官网</a>下载vagrant</p><p><img src="/2022/11/06/vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/vagrant.png" alt="img"></p><p>这里选择Windows 64位版本，安装过程跟着指引即可。</p><h2 id="3-vagrant基本操作"><a href="#3-vagrant基本操作" class="headerlink" title="3. vagrant基本操作"></a>3. vagrant基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建虚拟机，创建一个centos7虚拟机</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">vagrant init centos/7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动，初次启动会比较慢，需要拉镜像</span></span><br><span class="line">vagrant up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">vagrant status</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh到虚机</span></span><br><span class="line"> vagrant ssh</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 停止虚机</span></span><br><span class="line"> vagrant halt</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 暂停虚机</span></span><br><span class="line"> vagrant <span class="built_in">suspend</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 恢复虚机</span></span><br><span class="line"> vagrant resume</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 删除虚机</span></span><br><span class="line"> vagrant destroy</span><br></pre></td></tr></table></figure><blockquote><p>相关链接</p></blockquote><ol><li>virtualbox官方下载地址：<a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></li><li>vagrant官方下载地址：<a href="https://developer.hashicorp.com/vagrant/downloads">https://developer.hashicorp.com/vagrant/downloads</a></li><li>vagrant官方文档：<a href="https://developer.hashicorp.com/vagrant/docs">https://developer.hashicorp.com/vagrant/docs</a></li><li>vagrant box官方地址：<a href="https://app.vagrantup.com/boxes/search">https://app.vagrantup.com/boxes/search</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;vagrant支持的provider包括virtualbox、hyperv、libvirt等。&lt;/p&gt;
&lt;p&gt;virtualbox支持windows、linux、masoc的安装，因此本教程以virtualbox作为provider。&lt;/p&gt;</summary>
    
    
    
    <category term="Vagrant" scheme="https://huangjun0210.github.io/categories/Vagrant/"/>
    
    
    <category term="Vagrant" scheme="https://huangjun0210.github.io/tags/Vagrant/"/>
    
    <category term="slurm" scheme="https://huangjun0210.github.io/tags/slurm/"/>
    
    <category term="scow" scheme="https://huangjun0210.github.io/tags/scow/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+github搭建个人博客</title>
    <link href="https://huangjun0210.github.io/2022/10/31/Hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://huangjun0210.github.io/2022/10/31/Hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-10-31T14:24:53.000Z</published>
    <updated>2022-11-06T14:07:34.159Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文记录如何搭建Hexo，并使用比较干净整洁的BlueLake主题进行渲染。综合官网教程以及自己在安装过程写下了本教程，一步一步来就可以无痛安装。</p><span id="more"></span><h2 id="1-安装-Hexo"><a href="#1-安装-Hexo" class="headerlink" title="1. 安装 Hexo"></a>1. 安装 Hexo</h2><blockquote><p>nodejs、git等安装，与github的配置略</p></blockquote><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装以后，可以使用以下两种方式执行 Hexo：</p><ol><li><code>npx hexo &lt;command&gt;</code></li><li>将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>上传到Github配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/huangjun0210/huangjun0210.github.io.git</span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></table></figure><p>生成本地页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>安装hexo-deployer-git 自动部署发布工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>生成静态页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>本地文件上传到Github上面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="2-安装BlueLake"><a href="#2-安装BlueLake" class="headerlink" title="2. 安装BlueLake"></a>2. 安装BlueLake</h2><h3 id="2-1-安装主题"><a href="#2-1-安装主题" class="headerlink" title="2.1 安装主题"></a>2.1 安装主题</h3><p>在根目录下打开终端窗口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bashgit clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/bluelake</span><br></pre></td></tr></table></figure><h3 id="2-2-安装主题插件"><a href="#2-2-安装主题插件" class="headerlink" title="2.2 安装主题插件"></a>2.2 安装主题插件</h3><p>在根目录下打开终端窗口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git bashnpm install hexo-renderer-jade --save</span><br><span class="line">npm install hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h3 id="2-3-启用主题"><a href="#2-3-启用主题" class="headerlink" title="2.3 启用主题"></a>2.3 启用主题</h3><p>打开<code>_config.yml</code>配置文件，找到theme字段，将其值改为<code>bluelake</code>(先确认主题文件夹名称是否为bluelake)。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: bluelake</span><br></pre></td></tr></table></figure><h3 id="2-4-验证"><a href="#2-4-验证" class="headerlink" title="2.4 验证"></a>2.4 验证</h3><p>首先启动 Hexo 本地站点，并开启调试模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bashhexo s --debug</span><br></pre></td></tr></table></figure><p>在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：<code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code><br>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p><h3 id="2-5-更新主题"><a href="#2-5-更新主题" class="headerlink" title="2.5 更新主题"></a>2.5 更新主题</h3><p>今后若主题添加了新功能正是您需要的，您可以直接<code>git pull</code>来更新主题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git bashcd themes/bluelake</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="2-6-配置"><a href="#2-6-配置" class="headerlink" title="2.6 配置"></a>2.6 配置</h3><h4 id="2-6-1-配置网站头部显示文字"><a href="#2-6-1-配置网站头部显示文字" class="headerlink" title="2.6.1  配置网站头部显示文字"></a>2.6.1  配置网站头部显示文字</h4><p>打开<code>_config.yml</code>，找到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title:     # 标题，如：秋过冬漫长</span><br><span class="line">subtitle:  # 副标题，如：没有比脚更长的路，走过去，前面是个天！</span><br><span class="line">description: # 网站关键字，如：key, key1, key2, key3</span><br><span class="line">keywords:</span><br><span class="line">author:</span><br></pre></td></tr></table></figure><ul><li><code>title</code>和<code>subtitle</code>分别是网站主标题和副标题，会显示在网站头部；</li><li><code>description</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；</li><li><code>keywords</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；</li><li><code>author</code>就填写网站所有者的名字，会在网站底部的<code>Copyright</code>处有所显示。</li></ul><h4 id="2-6-2-设置语言"><a href="#2-6-2-设置语言" class="headerlink" title="2.6.2 设置语言"></a>2.6.2 设置语言</h4><p>该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在<code>根_config.yml</code>配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><h4 id="2-6-3-设置菜单"><a href="#2-6-3-设置菜单" class="headerlink" title="2.6.3 设置菜单"></a>2.6.3 设置菜单</h4><p>打开<code>主题_config.yml</code>，找到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  - page: home</span><br><span class="line">    directory: .</span><br><span class="line">    icon: fa-home</span><br><span class="line">  - page: archive</span><br><span class="line">    directory: archives/</span><br><span class="line">    icon: fa-archive</span><br><span class="line">  # - page: about</span><br><span class="line">  #   directory: about/</span><br><span class="line">  #   icon: fa-user</span><br><span class="line">  - page: rss</span><br><span class="line">    directory: atom.xml</span><br><span class="line">    icon: fa-rss</span><br></pre></td></tr></table></figure><p>主题默认是展示四个菜单，即<code>主页home</code>，<code>归档archive</code>，<code>关于about</code>，<code>订阅RSS</code>；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。</p><h4 id="2-6-4-添加about页"><a href="#2-6-4-添加about页" class="headerlink" title="2.6.4 添加about页"></a>2.6.4 添加about页</h4><p>此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &#x27;about&#x27;</span><br></pre></td></tr></table></figure><p>打开<code>主题_config.yml</code>，补全about页面的详细信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">about:</span><br><span class="line">  photo_url: # 头像的链接地址 e.g. http://cdn.itdn.top/blog/themeauthor.jpg</span><br><span class="line">  items:</span><br><span class="line">  - label: email # 个人邮箱</span><br><span class="line">    url: ## Your email with mailto: e.g.  mailto:zhenggchaoo@gmail.com</span><br><span class="line">    title: ## Your email e.g.  zhenggchaoo@gmail.com</span><br><span class="line">  - label: github # github</span><br><span class="line">    url: ## Your github&#x27;url e.g.  https://github.com/chaooo</span><br><span class="line">    title: ## Your github&#x27;name e.g.  chaooo</span><br><span class="line">  - label: weibo # 微博</span><br><span class="line">    url: ## Your weibo&#x27;s url e.g.  http://weibo.com/zhengchaooo</span><br><span class="line">    title: ## Your weibo&#x27;s name e.g.  秋过冬漫长</span><br></pre></td></tr></table></figure><p>当然您也可以自定义重新布局about页面，只需要修改<code>layout/page.jade</code>模板就好。</p><h4 id="2-6-5-添加本地搜索"><a href="#2-6-5-添加本地搜索" class="headerlink" title="2.6.5 添加本地搜索"></a>2.6.5 添加本地搜索</h4><p>默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件<a href="https://github.com/alexbruno/hexo-generator-json-content">hexo-generator-json-content</a>来创建JSON数据文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bashnpm install hexo-generator-json-content@2.2.0 --save</span><br></pre></td></tr></table></figure><p>然后在<code>根_config.yml</code>添加配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">jsonContent:</span><br><span class="line">  meta: false</span><br><span class="line">  pages: false</span><br><span class="line">  posts:</span><br><span class="line">    title: true</span><br><span class="line">    date: true</span><br><span class="line">    path: true</span><br><span class="line">    text: true</span><br><span class="line">    raw: false</span><br><span class="line">    content: false</span><br><span class="line">    slug: false</span><br><span class="line">    updated: false</span><br><span class="line">    comments: false</span><br><span class="line">    link: false</span><br><span class="line">    permalink: false</span><br><span class="line">    excerpt: false</span><br><span class="line">    categories: false</span><br><span class="line">    tags: true</span><br></pre></td></tr></table></figure><p>最后在<code>主题_config.yml</code>添加配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local_search: true</span><br></pre></td></tr></table></figure><h4 id="2-6-6-首页添加文章置顶"><a href="#2-6-6-首页添加文章置顶" class="headerlink" title="2.6.6 首页添加文章置顶"></a>2.6.6 首页添加文章置顶</h4><p>在根目录下打开命令行窗口安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>然后在需要置顶的文章的Front-matter中加上top: true即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: BlueLake博客主题的详细配置</span><br><span class="line">tags: [hexo,BlueLake]</span><br><span class="line">categories: Hexo博客</span><br><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="2-6-7-撰写文章"><a href="#2-6-7-撰写文章" class="headerlink" title="2.6.7 撰写文章"></a>2.6.7 撰写文章</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;新建博客文章名&quot;</span><br></pre></td></tr></table></figure><h3 id="2-7-集成第三方服务"><a href="#2-7-集成第三方服务" class="headerlink" title="2.7 集成第三方服务"></a>2.7 集成第三方服务</h3><h4 id="2-7-1-添加评论"><a href="#2-7-1-添加评论" class="headerlink" title="2.7.1 添加评论"></a>2.7.1 添加评论</h4><p>目前主题集成多种第三方评论，比如基于Github Issue的<a href="https://gitalk.github.io/">GITALK</a>），<a href="https://valine.js.org/">Valine</a>评论，<a href="http://changyan.kuaizhan.com/">畅言评论</a>，<a href="https://disqus.com/">Disqus评论</a>、<a href="https://livere.com/">来必力评论</a>、<a href="http://www.uyan.cc/">友言评论</a>、<a href="https://gentie.163.com/info.html">网易云跟帖评论</a>等。</p><p>配置<code>主题_config.yml</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># Gitalk comment</span><br><span class="line">gitalk:</span><br><span class="line">  enable: false</span><br><span class="line">  owner: ## Your GitHub ID, e.g. username</span><br><span class="line">  repo: ## The repository to store your comments, make sure you&#x27;re the repo&#x27;s owner, e.g. gitalk.github.io</span><br><span class="line">  client_id: ## GitHub client ID, e.g. 75752dafe7907a897619</span><br><span class="line">  client_secret: ## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span><br><span class="line">  admin: ## Github repo owner and collaborators, only these guys can initialize github issues.</span><br><span class="line">  language: &#x27;zh-CN&#x27; ## Language</span><br><span class="line">  pagerDirection: last # Comment sorting direction, available values are last and first.</span><br><span class="line"></span><br><span class="line"># Valine comment. https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: false # if you want use valine,please set this value is true</span><br><span class="line">  appId: # leancloud application app id</span><br><span class="line">  appKey: # leancloud application app key</span><br><span class="line">  notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # valine verify code (true/false)</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: mm # gravatar style https://valine.js.org/#/avatar</span><br><span class="line">  lang: zh-cn # i18n: zh-cn/en</span><br><span class="line">  placeholder: Just go go # valine comment input placeholder(like: Please leave your footprints )</span><br><span class="line">  guest_info: nick,mail,link #valine comment header info</span><br><span class="line"></span><br><span class="line"># Changyan comment. 畅言</span><br><span class="line">changyan:</span><br><span class="line">  enable: false</span><br><span class="line">  appid: ## changyan appid</span><br><span class="line">  appkey: ## changyan appkey</span><br><span class="line"></span><br><span class="line"># Other comments</span><br><span class="line">comment:</span><br><span class="line">  disqus: ## disqus_shortname</span><br><span class="line">  livere: ## 来必力(data-uid)</span><br><span class="line">  uyan: ## 友言(uid)</span><br><span class="line">  cloudTie: ## 网易云跟帖(productKey)</span><br></pre></td></tr></table></figure><h4 id="2-7-2-站点统计"><a href="#2-7-2-站点统计" class="headerlink" title="2.7.2 站点统计"></a>2.7.2 站点统计</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">busuanzi: true  # 卜算子阅读次数统计</span><br><span class="line">baidu_analytics: # 百度统计</span><br><span class="line">google_analytics: # 谷歌统计</span><br><span class="line">gauges_analytics: # Gauges</span><br></pre></td></tr></table></figure><h5 id="2-7-2-1-卜算子阅读次数统计"><a href="#2-7-2-1-卜算子阅读次数统计" class="headerlink" title="2.7.2.1 卜算子阅读次数统计"></a>2.7.2.1 卜算子阅读次数统计</h5><p>若busuanzi设置为true将计算文章的阅读量，及网站的访问量与访客数，并显示在文章标题下和网站底部。</p><h5 id="2-7-2-2-百度统计"><a href="#2-7-2-2-百度统计" class="headerlink" title="2.7.2.2 百度统计"></a>2.7.2.2 百度统计</h5><p>登录百度统计，定位到站点的代码获取页面。复制<code>//hm.baidu.com/hm.js?</code>后面那串统计脚本id(假设为：<code>8006843039519956000</code>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baidu_analytics: 8006843039519956000</span><br></pre></td></tr></table></figure><blockquote><p>注意： baidu_analytics不是你的百度id或者百度统计id，如若使用其他统计，配置方法与百度统计类似。</p></blockquote><p>参考链接：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文记录如何搭建Hexo，并使用比较干净整洁的BlueLake主题进行渲染。综合官网教程以及自己在安装过程写下了本教程，一步一步来就可以无痛安装。&lt;/p&gt;</summary>
    
    
    
    <category term="博客搭建" scheme="https://huangjun0210.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="https://huangjun0210.github.io/tags/hexo/"/>
    
    <category term="BlueLake" scheme="https://huangjun0210.github.io/tags/BlueLake/"/>
    
  </entry>
  
</feed>
