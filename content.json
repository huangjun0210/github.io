[{"title":"vagrant环境搭建","date":"2022-11-06T09:21:43.000Z","path":"2022/11/06/vagrant环境搭建/","text":"vagrant支持的provider包括virtualbox、hyperv、libvirt等。 virtualbox支持windows、linux、masoc的安装，因此本教程以virtualbox作为provider。 1. 安装virtualbox点击进入官网下载virtualbox 此处可选择操作系统版本，选择Windows版本下载、安装(其他操作系统类似)。 安装过程比较简单，跟着指引即可。 2. 安装vagrant点击进入官网下载vagrant 这里选择Windows 64位版本，安装过程跟着指引即可。 3. vagrant基本操作12345678910111213141516171819202122232425# 新建虚拟机，创建一个centos7虚拟机# 初始化vagrant init centos/7# 启动，初次启动会比较慢，需要拉镜像vagrant up# 查看状态vagrant status# ssh到虚机 vagrant ssh # 停止虚机 vagrant halt # 暂停虚机 vagrant suspend # 恢复虚机 vagrant resume # 删除虚机 vagrant destroy 相关链接 virtualbox官方下载地址：https://www.virtualbox.org/wiki/Downloads vagrant官方下载地址：https://developer.hashicorp.com/vagrant/downloads vagrant官方文档：https://developer.hashicorp.com/vagrant/docs vagrant box官方地址：https://app.vagrantup.com/boxes/search","tags":[{"name":"Vagrant","slug":"Vagrant","permalink":"https://huangjun0210.github.io/tags/Vagrant/"},{"name":"slurm","slug":"slurm","permalink":"https://huangjun0210.github.io/tags/slurm/"},{"name":"scow","slug":"scow","permalink":"https://huangjun0210.github.io/tags/scow/"}]},{"title":"HashMap的工作原理","date":"2022-11-06T09:18:14.253Z","path":"2022/11/06/HashMap的工作原理/","text":"Java 中的 HashMap 是以键值对 (key-value) 的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合 / 从集合添加和检索元素。当调用 put() 方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。 如果 key 已经存在了，value 会被更新成新值。 HashMap 的一些重要的特性是它的容量 (capacity)，负载因子 (load factor) 和扩容极限(threshold resizing)。 1. HashMap的存储结构数组+链表+红黑树，当链表长度大于8时，链表的数据将会以红黑树的形式进行存储，当链表长度降到6时为链表形式存储 2. 如何解决Hash冲突如果发生Hash冲突，Hashmap通过链表将产生冲突的元素组织起来，在Java 8中，如果一个bucket中冲突的元素超过某个限制(默认是8)，则使用红黑树来替换链表，从而提高速度。 3. Hashmap 扩容当 hashmap 中的元素个数超过数组大小 loadFactor 时，就会进行数组扩容， loadFactor 的默认值为 0。75，也就是说，默认情况下，数组大小为 16，那么当 hashmap 中元素个数超过 160。75=12 的时候，就把数组的大小扩展为 216=32，即扩大一倍，然后重新计算每个元素在数组中的位置，而这是一个非常消耗性能的操作，所以如果我们已经预知 hashmap 中元素的个数，那么预设元素的个数能够有效的提高 hashmap 的性能。比如说，我们有 1000 个元素 new HashMap(1000)，但是理论上来讲 new HashMap(1024) 更合适，不过上面 annegu 已经说过，即使是 1000，hashmap 也自动会将其设置为 1024。 但是 new HashMap(1024) 还不是更合适的，因为 0。75*1000 &lt; 1000，也就是说为了让 0。75 * size &gt; 1000，我们必须这样 new HashMap(2048) 才最合适，既考虑了 &amp; 的问题，也避免了 resize 的问题。 4. Hashmap线程安全吗Hashmap不是线程安全的。 HashTable和ConcuHashMap是线程安全的。 4.1 HashTable HashTable线程安全实现是直接在关键方法上加了synchronized，但是只有一把锁。多线程访问同一个 Hashtable 就会直接造成锁冲突。（冲突概率很大，频繁加锁解锁又要耗费大量资源）size 属性也是通过 synchronized 来控制同步，也是比较慢的。一旦触发扩容，就由该线程完成整个扩容过程。这个过程会涉及到大量的元素拷贝，效率会非常低。 4.2 ConcuHashMap相比于 Hashtable 做出了一系列的改进和优化。 每个bucket一把锁。 以 Java1.8 为例 读操作没有加锁(但是使用了volatile 保证从内存读取结果)，只对写操作进行加锁（减少锁冲突概率）。 加锁的方式仍然 是synchronized， 但是不是锁整个对象，而是 “锁桶” (用每个链表的头结点作为锁对象)，大大降低了锁冲突的概率 充分利用 CAS 特性。比如 size 属性通过 CAS 来更新。避免出现重量级锁的情况。 优化了扩容方式： 化整为零发现需要扩容的线程，只需要创建一个新的数组，同时只搬几个元素过去。扩容期间，新老数组同时存在。后续每个来操作 ConcurrentHashMap 的线程，都会参与搬家的过程。每个操作负责搬运一小 部分元素。搬完最后一个元素再把老数组删掉。这个期间，插入只往新数组加。这个期间，查找需要同时查新数组和老数组。相当于将HashTable的单次扩容所消耗的大量时间平摊到多次put过程，减少cpu的平均负荷，优化了体验。 5. 总结 HashMap： 线程不安全。key 允许为 null 。 Hashtable： 线程安全。使用 synchronized 锁 Hashtable 对象，效率较低，key 不允许为 null。 ConcurrentHashMap： 线程安全。使用 synchronized 锁每个链表头结点， 锁冲突概率低，充分利用 CAS 机制， 优化了扩容方式，key 不允许为 null。","tags":[{"name":"面试","slug":"面试","permalink":"https://huangjun0210.github.io/tags/%E9%9D%A2%E8%AF%95/"}]},{"title":"Hexo+github搭建个人博客","date":"2022-10-31T14:24:53.000Z","path":"2022/10/31/Hexo-github搭建个人博客/","text":"Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文记录如何搭建Hexo，并使用比较干净整洁的BlueLake主题进行渲染。综合官网教程以及自己在安装过程写下了本教程，一步一步来就可以无痛安装。 1. 安装 Hexo nodejs、git等安装，与github的配置略 所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。 1npm install -g hexo-cli 安装以后，可以使用以下两种方式执行 Hexo： npx hexo &lt;command&gt; 将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo &lt;command&gt;： 1echo &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 新建完成后，指定文件夹的目录如下： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 上传到Github配置 1234deploy: type: git repo: https://github.com/huangjun0210/huangjun0210.github.io.git branch: gh-pages 生成本地页面 1hexo s 安装hexo-deployer-git 自动部署发布工具 1npm install hexo-deployer-git --save 生成静态页面 1hexo g 本地文件上传到Github上面 1hexo d 2. 安装BlueLake2.1 安装主题在根目录下打开终端窗口： 1git bashgit clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/bluelake 2.2 安装主题插件在根目录下打开终端窗口： 1234git bashnpm install hexo-renderer-jade --savenpm install hexo-renderer-stylus --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --save 2.3 启用主题打开_config.yml配置文件，找到theme字段，将其值改为bluelake(先确认主题文件夹名称是否为bluelake)。 1theme: bluelake 2.4 验证首先启动 Hexo 本地站点，并开启调试模式： 1git bashhexo s --debug 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运行。 2.5 更新主题今后若主题添加了新功能正是您需要的，您可以直接git pull来更新主题。 12git bashcd themes/bluelakegit pull 2.6 配置2.6.1 配置网站头部显示文字打开_config.yml，找到： 12345title: # 标题，如：秋过冬漫长subtitle: # 副标题，如：没有比脚更长的路，走过去，前面是个天！description: # 网站关键字，如：key, key1, key2, key3keywords:author: title和subtitle分别是网站主标题和副标题，会显示在网站头部； description在网站界面不会显示，内容会加入网站源码的meta标签中，主要用于SEO； keywords在网站界面不会显示，内容会加入网站源码的meta标签中，主要用于SEO； author就填写网站所有者的名字，会在网站底部的Copyright处有所显示。 2.6.2 设置语言该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在根_config.yml配置如下： 1language: zh-CN 2.6.3 设置菜单打开主题_config.yml，找到： 12345678910111213menu: - page: home directory: . icon: fa-home - page: archive directory: archives/ icon: fa-archive # - page: about # directory: about/ # icon: fa-user - page: rss directory: atom.xml icon: fa-rss 主题默认是展示四个菜单，即主页home，归档archive，关于about，订阅RSS；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。 2.6.4 添加about页此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面： 1hexo new page &#x27;about&#x27; 打开主题_config.yml，补全about页面的详细信息： 123456789101112about: photo_url: # 头像的链接地址 e.g. http://cdn.itdn.top/blog/themeauthor.jpg items: - label: email # 个人邮箱 url: ## Your email with mailto: e.g. mailto:zhenggchaoo@gmail.com title: ## Your email e.g. zhenggchaoo@gmail.com - label: github # github url: ## Your github&#x27;url e.g. https://github.com/chaooo title: ## Your github&#x27;name e.g. chaooo - label: weibo # 微博 url: ## Your weibo&#x27;s url e.g. http://weibo.com/zhengchaooo title: ## Your weibo&#x27;s name e.g. 秋过冬漫长 当然您也可以自定义重新布局about页面，只需要修改layout/page.jade模板就好。 2.6.5 添加本地搜索默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件hexo-generator-json-content来创建JSON数据文件： 1git bashnpm install hexo-generator-json-content@2.2.0 --save 然后在根_config.yml添加配置： 123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 最后在主题_config.yml添加配置： 1local_search: true 2.6.6 首页添加文章置顶在根目录下打开命令行窗口安装： 12npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save 然后在需要置顶的文章的Front-matter中加上top: true即可。 123456---title: BlueLake博客主题的详细配置tags: [hexo,BlueLake]categories: Hexo博客top: true--- 2.6.7 撰写文章1hexo new post &quot;新建博客文章名&quot; 2.7 集成第三方服务2.7.1 添加评论目前主题集成多种第三方评论，比如基于Github Issue的GITALK），Valine评论，畅言评论，Disqus评论、来必力评论、友言评论、网易云跟帖评论等。 配置主题_config.yml： 123456789101112131415161718192021222324252627282930313233343536# Gitalk commentgitalk: enable: false owner: ## Your GitHub ID, e.g. username repo: ## The repository to store your comments, make sure you&#x27;re the repo&#x27;s owner, e.g. gitalk.github.io client_id: ## GitHub client ID, e.g. 75752dafe7907a897619 client_secret: ## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50 admin: ## Github repo owner and collaborators, only these guys can initialize github issues. language: &#x27;zh-CN&#x27; ## Language pagerDirection: last # Comment sorting direction, available values are last and first.# Valine comment. https://valine.js.orgvaline: enable: false # if you want use valine,please set this value is true appId: # leancloud application app id appKey: # leancloud application app key notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki verify: false # valine verify code (true/false) pageSize: 10 # comment list page size avatar: mm # gravatar style https://valine.js.org/#/avatar lang: zh-cn # i18n: zh-cn/en placeholder: Just go go # valine comment input placeholder(like: Please leave your footprints ) guest_info: nick,mail,link #valine comment header info# Changyan comment. 畅言changyan: enable: false appid: ## changyan appid appkey: ## changyan appkey# Other commentscomment: disqus: ## disqus_shortname livere: ## 来必力(data-uid) uyan: ## 友言(uid) cloudTie: ## 网易云跟帖(productKey) 2.7.2 站点统计1234busuanzi: true # 卜算子阅读次数统计baidu_analytics: # 百度统计google_analytics: # 谷歌统计gauges_analytics: # Gauges 2.7.2.1 卜算子阅读次数统计若busuanzi设置为true将计算文章的阅读量，及网站的访问量与访客数，并显示在文章标题下和网站底部。 2.7.2.2 百度统计登录百度统计，定位到站点的代码获取页面。复制//hm.baidu.com/hm.js?后面那串统计脚本id(假设为：8006843039519956000) 1baidu_analytics: 8006843039519956000 注意： baidu_analytics不是你的百度id或者百度统计id，如若使用其他统计，配置方法与百度统计类似。 参考链接：","tags":[{"name":"hexo","slug":"hexo","permalink":"https://huangjun0210.github.io/tags/hexo/"},{"name":"BlueLake","slug":"BlueLake","permalink":"https://huangjun0210.github.io/tags/BlueLake/"}]}]