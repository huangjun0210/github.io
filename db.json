{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/about/20221030224154.jpg","path":"about/20221030224154.jpg","modified":0,"renderable":0},{"_id":"themes/BlueLake/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/themeauthor.jpg","path":"themeauthor.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/giteement/gitee.oauthcallback.js","path":"giteement/gitee.oauthcallback.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/giteement/giteement.css","path":"giteement/giteement.css","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/giteement/giteement.min.js","path":"giteement/giteement.min.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/search.json.js","path":"js/search.json.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.eot","path":"css/iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.svg","path":"css/iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.ttf","path":"css/iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.woff","path":"css/iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.woff2","path":"css/iconfont/iconfont.woff2","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/images/alipay-pay.jpg","path":"css/images/alipay-pay.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/images/alipay.jpg","path":"css/images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/images/banner-dark.jpg","path":"css/images/banner-dark.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/images/wechat-pay.jpg","path":"css/images/wechat-pay.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/images/wechat.jpg","path":"css/images/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/localshare/css/share.styl","path":"localshare/css/share.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.eot","path":"localshare/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.svg","path":"localshare/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.ttf","path":"localshare/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.woff","path":"localshare/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/localshare/js/qrcode.js","path":"localshare/js/qrcode.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/localshare/js/social-share.js","path":"localshare/js/social-share.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/BlueLake/.gitignore","hash":"49f574312f050162fef2ac80f72b5a9c136c62a8","modified":1667122910126},{"_id":"themes/BlueLake/_config.yml","hash":"b6039417ce5632d919921265cb9d39565655bd4c","modified":1667141321083},{"_id":"themes/BlueLake/package.json","hash":"d8780159f11aac366285889372ccdb007095da07","modified":1667122910139},{"_id":"themes/BlueLake/languages/de-DE.yml","hash":"12d3ec934c9afa32aef174c6c7113e605a3a0b39","modified":1667122910128},{"_id":"themes/BlueLake/languages/en.yml","hash":"96f429d32c0857e956aebfe0c28883afd9163a49","modified":1667122910128},{"_id":"themes/BlueLake/LICENSE","hash":"4c3927c82d0aa4fac5cdf945e07afe5e24335891","modified":1667122910127},{"_id":"themes/BlueLake/languages/es-ES.yml","hash":"e28a412b9b98e74bdf79b77f244a4c4be412a83a","modified":1667122910128},{"_id":"themes/BlueLake/README.md","hash":"40257843a1c8101428385e5238f96515450a222f","modified":1667122910127},{"_id":"themes/BlueLake/languages/fr-FR.yml","hash":"e52b9716f45bb83e7c06898f7802df8cbed109e3","modified":1667122910129},{"_id":"themes/BlueLake/languages/ko.yml","hash":"dc110fdf5663fe510c30c6b4e6a057726b4841d0","modified":1667122910129},{"_id":"themes/BlueLake/languages/tr.yml","hash":"4f9f0c58d01cb74309c1913b01123aae80c82ec1","modified":1667122910129},{"_id":"themes/BlueLake/languages/zh-CN.yml","hash":"44b818febd84b2a2d07264ad2aa10d6bbad03ab4","modified":1667122910130},{"_id":"themes/BlueLake/languages/zh-TW.yml","hash":"757b269ca1a9b7b0745c15ece40d4354e4f792dd","modified":1667122910130},{"_id":"themes/BlueLake/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1667122910137},{"_id":"themes/BlueLake/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1667122910137},{"_id":"themes/BlueLake/layout/index.ejs","hash":"e64b89e7c769e9b43cf6dd6d4bdd2f7ba03a4df9","modified":1667122910138},{"_id":"themes/BlueLake/layout/layout.ejs","hash":"0ff64fb4c4ab14af7fe597ea78265d1f09cb11eb","modified":1667122910138},{"_id":"themes/BlueLake/layout/page.ejs","hash":"cc86a83b9edfa0ec21a1d6a1c99e0f772a064ed9","modified":1667122910138},{"_id":"themes/BlueLake/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1667122910138},{"_id":"themes/BlueLake/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1667122910139},{"_id":"themes/BlueLake/source/favicon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1667122910153},{"_id":"themes/BlueLake/layout/_partial/about.ejs","hash":"bedc6c126375b2bccdf8d17f59de7149f306f327","modified":1667122910130},{"_id":"themes/BlueLake/layout/_partial/after-footer.ejs","hash":"c0b8d95d827c6a797bb4d563506d9cbc9717099b","modified":1667122910130},{"_id":"themes/BlueLake/layout/_partial/archive-post.ejs","hash":"8565a0fcd38eff73af75e80f93f176ab8d9c08b9","modified":1667122910130},{"_id":"themes/BlueLake/layout/_partial/archive.ejs","hash":"4744116ed807129594fbf172b9919a2831070591","modified":1667122910131},{"_id":"themes/BlueLake/layout/_partial/article.ejs","hash":"5a70569d2017794b5252abffc7b08cc52c4deef4","modified":1667122910131},{"_id":"themes/BlueLake/layout/_partial/baidu-analytics.ejs","hash":"c6c911f0796aaf1cddc7098ee21e5dc6206e1157","modified":1667122910131},{"_id":"themes/BlueLake/layout/_partial/commonts-script.ejs","hash":"d019f9f6380076008f58e758f44d8883f8f656bb","modified":1667122910132},{"_id":"themes/BlueLake/layout/_partial/footer.ejs","hash":"274285e1cfb82d4f77bb1089720f4cf3b78c3964","modified":1667122910132},{"_id":"themes/BlueLake/layout/_partial/gauges-analytics.ejs","hash":"165008f72ed77f0da879d132563d763369d26472","modified":1667122910132},{"_id":"themes/BlueLake/layout/_partial/google-analytics.ejs","hash":"9fc18f1fd5bec16f8a3d30b0ce38458485c398b3","modified":1667122910132},{"_id":"themes/BlueLake/layout/_partial/head.ejs","hash":"b412b842c97500972642b70131a788aaa823419d","modified":1667122910132},{"_id":"themes/BlueLake/layout/_partial/header.ejs","hash":"d59761b90a19171084eaf2b47cc01ff43dc05562","modified":1667122910133},{"_id":"themes/BlueLake/layout/_partial/pagination.ejs","hash":"c6f279e9bf3e20c2990b22ddbcbd3fed27c5b5bb","modified":1667122910133},{"_id":"themes/BlueLake/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1667122910136},{"_id":"themes/BlueLake/layout/_widget/archive.ejs","hash":"ec2d9bf37b9bb613524b702d49c3234f82cbf96f","modified":1667122910136},{"_id":"themes/BlueLake/layout/_widget/category.ejs","hash":"85d5afdfefb18b2b1a88ef074746cbf109658a6c","modified":1667122910136},{"_id":"themes/BlueLake/layout/_widget/links.ejs","hash":"33909a5d6a800f987eb97678d09d0a16d9a5a7b3","modified":1667122910136},{"_id":"themes/BlueLake/layout/_widget/recent_posts.ejs","hash":"598c278442022a08b8e1809b77714779bb8a0d81","modified":1667122910137},{"_id":"themes/BlueLake/layout/_widget/tag.ejs","hash":"feea59d6e9d122895ce3ed2cc4a5ee505e6e336e","modified":1667122910137},{"_id":"themes/BlueLake/layout/_widget/tagcloud.ejs","hash":"658c68f624bce479a81a2db8b017b14180ce3f8a","modified":1667122910137},{"_id":"themes/BlueLake/source/css/_extend.styl","hash":"64875ec77cc31a1225a5992a5d507bf98be14b04","modified":1667122910140},{"_id":"themes/BlueLake/source/css/_variables.styl","hash":"868e13f24ebbaf99067a18e45f5f58b4b4a5cf8c","modified":1667122910145},{"_id":"themes/BlueLake/source/css/style.styl","hash":"60206b021bd3f4364b7376a04bacbcf9ce868029","modified":1667122910152},{"_id":"themes/BlueLake/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1667122910152},{"_id":"themes/BlueLake/source/giteement/gitee.oauthcallback.js","hash":"e00dcbf30010e33fb6d633dfa09f077b2b33b032","modified":1667122910153},{"_id":"themes/BlueLake/source/js/search.json.js","hash":"ed5f817a6a2eff541e15d85a6dd8a8df83bff334","modified":1667122910158},{"_id":"themes/BlueLake/source/giteement/giteement.css","hash":"8e6ee0547d7c3eda5a4b96fefc3b89103dccb9d1","modified":1667122910154},{"_id":"themes/BlueLake/source/js/script.js","hash":"1b05856e32423ad8fc50bc7f4e0aac4ae39f814c","modified":1667122910158},{"_id":"themes/BlueLake/layout/_partial/post/category.ejs","hash":"d6c174fe0fe9ec611620860f9685415b78cb889a","modified":1667122910133},{"_id":"themes/BlueLake/layout/_partial/post/comments-count.ejs","hash":"e776617c998b8d83987faf3148ae715909c6db62","modified":1667122910133},{"_id":"themes/BlueLake/layout/_partial/post/comments.ejs","hash":"8ccf3390fdb05089ea2def9e140ae7ad95236243","modified":1667122910134},{"_id":"themes/BlueLake/layout/_partial/post/date.ejs","hash":"603367b4eddaedd0c74fc976ef8a0a0cbfe2fa34","modified":1667122910134},{"_id":"themes/BlueLake/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1667122910134},{"_id":"themes/BlueLake/layout/_partial/post/nav.ejs","hash":"f8054c6ec9d8a2fd48d66c96500639847fe02293","modified":1667122910134},{"_id":"themes/BlueLake/layout/_partial/post/reward.ejs","hash":"1e7e6e5602db81efb6e3d0bd0ee17aa395247075","modified":1667122910135},{"_id":"themes/BlueLake/layout/_partial/post/share.ejs","hash":"d862f8a5df4635e570bb8f62c3935c0ae3b7751c","modified":1667122910135},{"_id":"themes/BlueLake/layout/_partial/post/title.ejs","hash":"dacc884b56f24b31d85936327424b4f9edd9200a","modified":1667122910135},{"_id":"themes/BlueLake/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1667122910135},{"_id":"themes/BlueLake/layout/_partial/post/toc.ejs","hash":"1c40a8c5359f555745d78da24c9529cc26580340","modified":1667122910135},{"_id":"themes/BlueLake/layout/_partial/post/views-count.ejs","hash":"088c45b29e4cc040d87571dd525f9c9d1a07adb6","modified":1667122910136},{"_id":"themes/BlueLake/source/css/_partial/archive.styl","hash":"53c95e8c4e761e45d0c430f8972d1a5c3519b596","modified":1667122910140},{"_id":"themes/BlueLake/source/css/_partial/about.styl","hash":"460f43046ae5e89786165475582153cea051a8de","modified":1667122910140},{"_id":"themes/BlueLake/source/css/_partial/article.styl","hash":"5a043bf3c4f9a517b8846bb12957c83f68e43d76","modified":1667122910141},{"_id":"themes/BlueLake/source/css/_partial/comment.styl","hash":"38db346eb7f5d6cc1e78b59225bb33ea1ee16baf","modified":1667122910141},{"_id":"themes/BlueLake/source/css/_partial/footer.styl","hash":"698afe02aa930fdcc18ef981e0343bb99085dd57","modified":1667122910141},{"_id":"themes/BlueLake/source/css/_partial/header.styl","hash":"68582a0e1c222850f5ffc0a541baa2c717be38a5","modified":1667122910141},{"_id":"themes/BlueLake/source/css/_partial/highlight.styl","hash":"4fd02b470e68f74e3fa5e97092cdc5ea0a2d0199","modified":1667122910143},{"_id":"themes/BlueLake/source/css/_partial/iconfont.styl","hash":"fb68b181802859322a938490331017c1ad99f23d","modified":1667122910143},{"_id":"themes/BlueLake/source/css/_partial/pagination.styl","hash":"df15c94b90650f3b7e1018514a98c82575f7de1d","modified":1667122910143},{"_id":"themes/BlueLake/source/css/_partial/reward.styl","hash":"e970dff8c3132f061d04bf001aad3e4ef5824599","modified":1667122910143},{"_id":"themes/BlueLake/source/css/_partial/sidebar-aside.styl","hash":"c2320472d5345d99be9850bd8e0dc64dbece6a96","modified":1667122910144},{"_id":"themes/BlueLake/source/css/_partial/sidebar-bottom.styl","hash":"6aab4e0ee81c4407bed9ccb60335d1022f819aca","modified":1667122910144},{"_id":"themes/BlueLake/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1667122910144},{"_id":"themes/BlueLake/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1667122910145},{"_id":"themes/BlueLake/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1667122910145},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.woff","hash":"29e34038a63a5a810f3af4a9c15dc1476d97fc93","modified":1667122910147},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.eot","hash":"d79ff9e8325c9c0d2db4ee6dadd2f82799169783","modified":1667122910145},{"_id":"themes/BlueLake/source/css/images/alipay-pay.jpg","hash":"c1cdd36471a1197e31ee6309e979d1fb63daeb25","modified":1667122910148},{"_id":"themes/BlueLake/source/css/images/alipay.jpg","hash":"cfafbfa86d3223e5a7aa6025d4e78d26bdcf02af","modified":1667122910148},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.ttf","hash":"655ead66c5702e6e4a214c1473c78e450c49bfd7","modified":1667122910146},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.svg","hash":"f9d7bf99db7d73faf2fef3891537630ea4f998ae","modified":1667122910146},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.woff2","hash":"09f1ae7849a0649f0bb8f46e128c97fcb59e3a4c","modified":1667122910147},{"_id":"themes/BlueLake/source/css/images/wechat-pay.jpg","hash":"35f0f9859918d7b67d0a3279b110550667d97e8c","modified":1667122910151},{"_id":"themes/BlueLake/source/css/images/wechat.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1667122910152},{"_id":"themes/BlueLake/source/localshare/css/share.styl","hash":"3a521a56eb06cb0ad08662d5e696c7950f456356","modified":1667122910158},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1667122910160},{"_id":"themes/BlueLake/source/localshare/js/qrcode.js","hash":"962ad9cb87afa140a644178e5f3c53e2514ea1e5","modified":1667122910160},{"_id":"themes/BlueLake/source/localshare/js/social-share.js","hash":"fe73d3b1c63a498f18f885fc83d631c2b63535e7","modified":1667122910161},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1667122910159},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1667122910159},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1667122910159},{"_id":"themes/BlueLake/source/fancybox/jquery.fancybox.min.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1667122910153},{"_id":"themes/BlueLake/source/js/jquery-3.4.1.min.js","hash":"b15f7cfa79519756dff1ad22553fd0ed09024343","modified":1667122910157},{"_id":"themes/BlueLake/source/css/images/banner.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1667122910151},{"_id":"themes/BlueLake/source/themeauthor.jpg","hash":"9249ed22939add5e393180338b4fb76bfe88034c","modified":1667122910163},{"_id":"themes/BlueLake/source/giteement/giteement.min.js","hash":"12ff917ec7d6b89a70356ebe4198bdf82d3a70eb","modified":1667122910156},{"_id":"source/README.md","hash":"7b5897992885325787ebbabda7337a0ebd416211","modified":1667486716950},{"_id":"source/.git/COMMIT_EDITMSG","hash":"d311941b37b54d23b04926035274becd71f12bba","modified":1667728391282},{"_id":"source/.git/HEAD","hash":"9f1df7eea4156be8a871c292b549b3325e425aa2","modified":1667486769470},{"_id":"source/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1667486724571},{"_id":"source/.git/config","hash":"8126ebe37ab5058afdbeabfd739d2546e852bf19","modified":1667486788529},{"_id":"source/_posts/HashMap的工作原理.md","hash":"659358d326460df2e8142cef670e081332d6d24e","modified":1667726579130},{"_id":"source/.git/index","hash":"94aaf22ba91aac6169c198a40ce0f9902dc40dde","modified":1667728391277},{"_id":"source/_posts/Hexo-github搭建个人博客.md","hash":"d40082be7041e65b5c1d53937b4ca85dd298f586","modified":1667487847356},{"_id":"source/about/index.md","hash":"391c572782d968b9f16cdeb3690dd95d9d14f0db","modified":1667141182468},{"_id":"source/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1667486724575},{"_id":"source/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1667486724578},{"_id":"source/.git/hooks/fsmonitor-watchman.sample","hash":"0ec0ec9ac11111433d17ea79e0ae8cec650dcfa4","modified":1667486724581},{"_id":"source/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1667486724583},{"_id":"source/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1667486724584},{"_id":"source/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1667486724587},{"_id":"source/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1667486724589},{"_id":"source/.git/hooks/pre-push.sample","hash":"a599b773b930ca83dbc3a5c7c13059ac4a6eaedc","modified":1667486724592},{"_id":"source/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1667486724594},{"_id":"source/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1667486724596},{"_id":"source/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1667486724599},{"_id":"source/.git/hooks/push-to-checkout.sample","hash":"508240328c8b55f8157c93c43bf5e291e5d2fbcb","modified":1667486724602},{"_id":"source/.git/hooks/update.sample","hash":"730e6bd5225478bab6147b7a62a6e2ae21d40507","modified":1667486724605},{"_id":"source/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1667486724609},{"_id":"source/.git/logs/HEAD","hash":"54a9911cca732567197e671044a9d4ab59e38ee9","modified":1667728391289},{"_id":"source/.git/objects/05/3ac19b2b220287f0c4c02601780af6d60d13ad","hash":"4a264cfc161d42b245697c3c912ed7cd2e6e8778","modified":1667489989603},{"_id":"source/.git/objects/11/9c13ce6d5498565a5538939b5b33d6620bbd01","hash":"962acd09499073147f8fbf699408c7d092e35bd8","modified":1667486768667},{"_id":"source/.git/objects/17/094602977399a5db1c6d565c03360acd2d38a7","hash":"2199ae24aa9b80b637a381b218e648a6696956a8","modified":1667486746938},{"_id":"source/.git/objects/26/37a2bcfb0bc2c12f592a38135147338284d931","hash":"0a909a0f769008716dc738b1c2e6dd3ba0f34590","modified":1667486768646},{"_id":"source/.git/objects/57/03b12c1f94c269c179dc76198e0eb606976636","hash":"35841fa80c5743ea5c095f522c025a09b90edca6","modified":1667489989598},{"_id":"source/.git/objects/57/fd6acf425df03f40c2d6fa0a4f9cbcb684fadb","hash":"efea0d57ebe290c442b6c480e072c0cf67ec6bd4","modified":1667486746896},{"_id":"source/.git/objects/5a/941bbcd8b2c9dd6e708babc69cfc9a7be1a0f9","hash":"b970081f5286c44cd139d5ca57439811d08368fa","modified":1667490021367},{"_id":"source/.git/objects/83/c3352f037f43c5d69b6e1f9652f8259e3698c2","hash":"5b94f81ab296498af7ca66bd348308117516c3d1","modified":1667486768651},{"_id":"source/.git/objects/95/dacfa9394cf81e067bcfc8c1e1438b1d964f40","hash":"7486c2058b380a736b8e9384364bd871e338530d","modified":1667486746891},{"_id":"source/.git/objects/c6/36580ee26836891f9775f993fd9a0e24d901bd","hash":"698deaf9d7c8a4756477e9db688265fe76c5d24f","modified":1667486746904},{"_id":"source/.git/objects/c7/0d73a7a2794e4f256bb99a30364fa104ef5e3a","hash":"2e3276f37ddb23978dccd03de3ad5bd489f033b8","modified":1667486768656},{"_id":"source/.git/objects/ae/3fc2940172a6fdfb8170c7497ce9750364344d","hash":"8f409050077f5a928d6658439fbd2592d426796b","modified":1667490021385},{"_id":"source/.git/objects/d7/1e2580bff02c8bedae5235b9dc03f5a14f8e1a","hash":"aaa8ff202bac0836b3a6cada2c0eb5d325f2a5d5","modified":1667490021359},{"_id":"source/.git/objects/de/966a47add23ffeae1c4d19fbeb956c5cc67538","hash":"dffe23cd83a6fe04c069d5a52c34e8c0f74ff382","modified":1667486746884},{"_id":"source/.git/refs/heads/main","hash":"8a014352622540c61231764821dbbcf214b5b295","modified":1667728391288},{"_id":"source/.git/logs/refs/heads/main","hash":"2a40e9410fec45b28aefa5918ba11690011e7907","modified":1667728391289},{"_id":"source/.git/refs/remotes/origin/main","hash":"bd1511eb723fd66fba8bdbc2c46d1f0329817adb","modified":1667727509486},{"_id":"source/.git/logs/refs/remotes/origin/main","hash":"664a6c568f6fa7458fc4f2acfb4f911ef2060e0e","modified":1667727509487},{"_id":"source/about/20221030224154.jpg","hash":"8ef903cb4a5f99569b74229d7ea09d3f104428fb","modified":1667140917305},{"_id":"source/.git/objects/ef/65f7d495d6e16b7f839530bce6963d349c6356","hash":"91e6df3597ea4c86c3dbe39e972410841799bda1","modified":1667486746932},{"_id":"themes/BlueLake/source/css/images/banner-dark.jpg","hash":"7d9c0649357314811f5aca914b6c9230c72c613b","modified":1667225637027},{"_id":"public/atom.xml","hash":"fd809f80f97525236270f353cfa8595a3b34692a","modified":1667728366728},{"_id":"public/content.json","hash":"1bba6b91bde5a166fd6a39779c5052f9bfc87dea","modified":1667727293178},{"_id":"public/sitemap.xml","hash":"ee9f421761183a80798202858ed0e8f544622351","modified":1667727293178},{"_id":"public/sitemap.txt","hash":"e35ac8a7e4002b1191bdb51ec8c3793a1060019e","modified":1667727293178},{"_id":"public/README.html","hash":"5018142760503378a62ed12e2d73c6eb1d5a02bc","modified":1667727293178},{"_id":"public/about/index.html","hash":"bce4f1176b6f8d113d982b679864e9fe3c20bf85","modified":1667727293178},{"_id":"public/2022/11/03/HashMap的工作原理/index.html","hash":"c8832fe5214dad96c39830214df05d3d468908cf","modified":1667490664326},{"_id":"public/archives/index.html","hash":"a236e798a134f725a41022a27aaa3160344bf8c6","modified":1667727293178},{"_id":"public/archives/2022/index.html","hash":"e10a46351042d46c1b926accbea93c6ebc0d2038","modified":1667727293178},{"_id":"public/archives/2022/10/index.html","hash":"a4772805c817156fdc8b9564f650d15c7179a213","modified":1667727293178},{"_id":"public/archives/2022/11/index.html","hash":"cfa4b14eac963b4aca1b0e30cf8a83d6b7b2db06","modified":1667727293178},{"_id":"public/categories/面试/index.html","hash":"b7de2b0ebd60c84e0e23bc1e691c088d1624e8ea","modified":1667490664326},{"_id":"public/categories/博客搭建/index.html","hash":"4d4a647e65777fed695d89f3708fa1edc6d22c3f","modified":1667727293178},{"_id":"public/index.html","hash":"2e9ad4e26343be862f03ac0cbc7f25cbf0ad433c","modified":1667727293178},{"_id":"public/tags/Java/index.html","hash":"774f8a3f17feaa83cbd2f3386ad12b5a766e5786","modified":1667490664326},{"_id":"public/tags/hexo/index.html","hash":"0bf2444ac70d7db6dff0711bfcf1a7618676f970","modified":1667727293178},{"_id":"public/tags/BlueLake/index.html","hash":"a1b74ffef6177f899991aa7ac43c35f0640d2644","modified":1667727293178},{"_id":"public/2022/10/31/Hexo-github搭建个人博客/index.html","hash":"adcb53158ec9d6b27a7bdcbc9474c6a9896b6ce0","modified":1667727293178},{"_id":"public/favicon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1667490664326},{"_id":"public/css/iconfont/iconfont.eot","hash":"d79ff9e8325c9c0d2db4ee6dadd2f82799169783","modified":1667490664326},{"_id":"public/css/iconfont/iconfont.svg","hash":"f9d7bf99db7d73faf2fef3891537630ea4f998ae","modified":1667490664326},{"_id":"public/css/iconfont/iconfont.ttf","hash":"655ead66c5702e6e4a214c1473c78e450c49bfd7","modified":1667490664326},{"_id":"public/css/iconfont/iconfont.woff","hash":"29e34038a63a5a810f3af4a9c15dc1476d97fc93","modified":1667490664326},{"_id":"public/css/iconfont/iconfont.woff2","hash":"09f1ae7849a0649f0bb8f46e128c97fcb59e3a4c","modified":1667490664326},{"_id":"public/css/images/alipay-pay.jpg","hash":"c1cdd36471a1197e31ee6309e979d1fb63daeb25","modified":1667490664326},{"_id":"public/css/images/alipay.jpg","hash":"cfafbfa86d3223e5a7aa6025d4e78d26bdcf02af","modified":1667490664326},{"_id":"public/css/images/wechat-pay.jpg","hash":"35f0f9859918d7b67d0a3279b110550667d97e8c","modified":1667490664326},{"_id":"public/css/images/wechat.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1667490664326},{"_id":"public/localshare/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1667490664326},{"_id":"public/localshare/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1667490664326},{"_id":"public/localshare/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1667490664326},{"_id":"public/localshare/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1667490664326},{"_id":"public/about/20221030224154.jpg","hash":"8ef903cb4a5f99569b74229d7ea09d3f104428fb","modified":1667490664326},{"_id":"public/css/images/banner.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1667490664326},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1667490664326},{"_id":"public/giteement/gitee.oauthcallback.js","hash":"f24dc1fd8de0dc44b8d70df83f7c82fd2f3fc710","modified":1667490664326},{"_id":"public/js/search.json.js","hash":"ec601a6db4c68a7d9c2d440951c6e26ebfbc1f3a","modified":1667490664326},{"_id":"public/js/script.js","hash":"b9441363ff8fe829d90295ea947960338a1a020a","modified":1667490664326},{"_id":"public/localshare/css/share.css","hash":"34f53537ebcf2757b35a15a4a9473f2352486372","modified":1667490664326},{"_id":"public/localshare/js/social-share.js","hash":"9bfe34fe7691833e90815c5c862545bde581cf29","modified":1667490664326},{"_id":"public/css/style.css","hash":"630f6c6d9a995cc8fd64c967608ba1d715a841fd","modified":1667490664326},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1667490664326},{"_id":"public/giteement/giteement.css","hash":"887ad901816c2427b1715444f72ae94f6146e9f7","modified":1667490664326},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1667490664326},{"_id":"public/giteement/giteement.min.js","hash":"922687138ef42d0c77ff6a1c6d3d85ab6c743466","modified":1667490664326},{"_id":"public/localshare/js/qrcode.js","hash":"9caa0d9a9ba4409a3f77540a1b15a7617aeb28e8","modified":1667490664326},{"_id":"public/themeauthor.jpg","hash":"9249ed22939add5e393180338b4fb76bfe88034c","modified":1667490664326},{"_id":"public/css/images/banner-dark.jpg","hash":"7d9c0649357314811f5aca914b6c9230c72c613b","modified":1667490664326},{"_id":"source/_posts/vagrant环境搭建.md","hash":"41544ab4c0eecec8e080484e528a7955ff2e1b1a","modified":1667728262833},{"_id":"source/_posts/images/vagrant.PNG","hash":"8f1c29cb8507fb5a2761588743cc10a8969b6d72","modified":1667726856750},{"_id":"source/_posts/images/virtualbox.PNG","hash":"3e5669c06adeddfa505d10a5f1e56e43e5be1d9e","modified":1667726930718},{"_id":"public/2022/11/06/vagrant环境搭建/index.html","hash":"36f55e6ec3b84875a0213e68822eb6179b9676df","modified":1667728366728},{"_id":"public/categories/Java基础/index.html","hash":"2ee1ee8bf409822705bff80a35871bdaae2045a1","modified":1667727293178},{"_id":"public/categories/Vagrant/index.html","hash":"4396db7aa659264269284432e549ae10fa156caa","modified":1667727293178},{"_id":"public/tags/面试/index.html","hash":"14c064370ed9f6e29843146927def4b89afc88bf","modified":1667727293178},{"_id":"public/tags/Vagrant/index.html","hash":"8763de96fdcab9e9790dcb7e254d2d65b5491706","modified":1667727293178},{"_id":"public/tags/slurm/index.html","hash":"7c5662362ef481cda2857e7d660ed1ffd3ef85cb","modified":1667727293178},{"_id":"public/tags/scow/index.html","hash":"2e9de06e2a520668eb9d75cfc6c8315bbbab480d","modified":1667727293178},{"_id":"public/2022/11/06/HashMap的工作原理/index.html","hash":"aafd938fb5389ec2c2dc162300d204ca9835a364","modified":1667727293178},{"_id":"source/.git/FETCH_HEAD","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1667728393975},{"_id":"source/.git/ORIG_HEAD","hash":"bd1511eb723fd66fba8bdbc2c46d1f0329817adb","modified":1667727505521},{"_id":"source/.git/objects/01/ff0226ff98e1faa323fd62d5a5a92fe0f6652f","hash":"fa4899655b2004719ec1925e632cae3ad43e292b","modified":1667727421815},{"_id":"source/.git/objects/16/4359852cd87efc2285d75beb3d3e79d749e678","hash":"57051165449217c955d1a4553855f8b1f9f667bc","modified":1667727421819},{"_id":"source/.git/objects/1c/ba40dd7f05f255376a70c32ca5ef095b243249","hash":"a9c0b6370e7e28700911440a93ac5518a015ca54","modified":1667727421936},{"_id":"source/.git/objects/69/1b163c7e3275123b45d0ed7a165e25d490855d","hash":"cd618227d6f08477c35abf6db88dd424982882d2","modified":1667727421794},{"_id":"source/.git/objects/97/15d4c85313f63f6774e7e71ccc4f354a252802","hash":"c21a99ae808ac8f2c3d4b3949a15c9d197e9c14d","modified":1667727421822},{"_id":"source/.git/objects/9b/7eea0df2bbcf9e04897e1de89cbf935192c6ce","hash":"4fd111d57ead5d55df4bacc38ac8b0dcd8665400","modified":1667727421945},{"_id":"source/.git/objects/c5/b44a4c8dea1929538ed30f7816f5d5cd0b2493","hash":"b0f4ad109b59e0665c2539fc02e300c914ab5b2a","modified":1667727421924},{"_id":"source/.git/objects/dd/11f76957bd862a38151643f8f99d695fb2b53f","hash":"ce25116aacb3288d273df95b75f0fe4d7ea98a6d","modified":1667727421930},{"_id":"source/_posts/vagrant环境搭建/vagrant.png","hash":"8f1c29cb8507fb5a2761588743cc10a8969b6d72","modified":1667726856750},{"_id":"source/_posts/images/vagrant-1667728238080.PNG","hash":"8f1c29cb8507fb5a2761588743cc10a8969b6d72","modified":1667728238085},{"_id":"source/_posts/vagrant环境搭建/virtualbox.png","hash":"3e5669c06adeddfa505d10a5f1e56e43e5be1d9e","modified":1667726930718},{"_id":"public/2022/11/06/vagrant环境搭建/virtualbox.png","hash":"3e5669c06adeddfa505d10a5f1e56e43e5be1d9e","modified":1667728366728},{"_id":"public/2022/11/06/vagrant环境搭建/vagrant.png","hash":"8f1c29cb8507fb5a2761588743cc10a8969b6d72","modified":1667728366728},{"_id":"source/.git/objects/63/3acd578ff10f742749ec7e68dce51554677805","hash":"11ec6037b0c83a293a4b155cb926b0fe319e75b6","modified":1667728391283},{"_id":"source/.git/objects/3c/f81764c7f48cb2934fe9c07bc255f02fdc65ef","hash":"bdaff75ee246529096ae782f4c119e58bf17d5c4","modified":1667728391273},{"_id":"source/.git/objects/44/90cc96148f962703f2f782afef343763622f20","hash":"67fb7b291ca485549337577fd9db9cb6d6f3446b","modified":1667728391151},{"_id":"source/.git/objects/aa/66b3733456110ee9458b50867756b7524640b0","hash":"86fa40f0daba0b8bba91c5728fb9b305fca36452","modified":1667728391268},{"_id":"source/.git/objects/77/955701c094a05359a440d5f5796a62a122b4c9","hash":"35060f27ae38f6678c35eed47cf905642d76fadf","modified":1667728391260}],"Category":[{"name":"面试","_id":"cla18w0lq00038cve2h82catl"},{"name":"博客搭建","_id":"cla18w0m300088cve3jfr6ti3"},{"name":"Java基础","_id":"cla55ntzx00004g6w6npoe8dw"},{"name":"Vagrant","_id":"cla55nu0300054g6whr5w7zxs"}],"Data":[],"Page":[{"_content":"# blog\n","source":"README.md","raw":"# blog\n","date":"2022-11-03T14:45:16.950Z","updated":"2022-11-03T14:45:16.950Z","path":"README.html","title":"","comments":1,"layout":"page","_id":"cla18w0lc00008cve7gsd3gje","content":"<h1 id=\"blog\"><a href=\"#blog\" class=\"headerlink\" title=\"blog\"></a>blog</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"blog\"><a href=\"#blog\" class=\"headerlink\" title=\"blog\"></a>blog</h1>"},{"title":"about","date":"2022-10-30T09:56:45.000Z","_content":"\nabout:\n  photo_url: '/20221030224154.jpg' ## Your photo e.g. /themeauthor.jpg\n  items:\n  - label: email\n    url: 'mailto:huangjun0210-17@126.com'  ## Your email with mailto: e.g.  mailto:chaoles@foxmail.com\n    title: 'huangjun0210-17@126.com' ## Your email e.g.  chaoles@foxmail.com\n  - label: github\n    url: 'https://github.com/huangjun0210' ## Your github'url e.g.  https://github.com/chaooo\n    title: 'huangjun0210' ## Your github'name e.g.  chaooo","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-10-30 17:56:45\n---\n\nabout:\n  photo_url: '/20221030224154.jpg' ## Your photo e.g. /themeauthor.jpg\n  items:\n  - label: email\n    url: 'mailto:huangjun0210-17@126.com'  ## Your email with mailto: e.g.  mailto:chaoles@foxmail.com\n    title: 'huangjun0210-17@126.com' ## Your email e.g.  chaoles@foxmail.com\n  - label: github\n    url: 'https://github.com/huangjun0210' ## Your github'url e.g.  https://github.com/chaooo\n    title: 'huangjun0210' ## Your github'name e.g.  chaooo","updated":"2022-10-30T14:46:22.468Z","path":"about/index.html","comments":1,"layout":"page","_id":"cla18w0lo00028cvegyv7hetn","content":"<p>about:<br>  photo_url: ‘/20221030224154.jpg’ ## Your photo e.g. /themeauthor.jpg<br>  items:</p>\n<ul>\n<li>label: email<br>url: ‘mailto:<a href=\"mailto:&#x68;&#117;&#97;&#110;&#x67;&#x6a;&#117;&#x6e;&#48;&#50;&#x31;&#x30;&#x2d;&#49;&#55;&#64;&#x31;&#x32;&#x36;&#x2e;&#x63;&#111;&#x6d;\">&#x68;&#117;&#97;&#110;&#x67;&#x6a;&#117;&#x6e;&#48;&#50;&#x31;&#x30;&#x2d;&#49;&#55;&#64;&#x31;&#x32;&#x36;&#x2e;&#x63;&#111;&#x6d;</a>‘  ## Your email with mailto: e.g.  mailto:<a href=\"mailto:&#x63;&#104;&#x61;&#x6f;&#108;&#x65;&#x73;&#64;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#x63;&#104;&#x61;&#x6f;&#108;&#x65;&#x73;&#64;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a><br>title: ‘<a href=\"mailto:&#104;&#117;&#97;&#x6e;&#x67;&#106;&#x75;&#110;&#x30;&#50;&#x31;&#48;&#45;&#49;&#x37;&#64;&#49;&#50;&#54;&#x2e;&#99;&#x6f;&#x6d;\">&#104;&#117;&#97;&#x6e;&#x67;&#106;&#x75;&#110;&#x30;&#50;&#x31;&#48;&#45;&#49;&#x37;&#64;&#49;&#50;&#54;&#x2e;&#99;&#x6f;&#x6d;</a>‘ ## Your email e.g.  <a href=\"mailto:&#99;&#x68;&#97;&#x6f;&#x6c;&#x65;&#115;&#x40;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#99;&#x68;&#97;&#x6f;&#x6c;&#x65;&#115;&#x40;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></li>\n<li>label: github<br>url: ‘<a href=\"https://github.com/huangjun0210&#39;\">https://github.com/huangjun0210&#39;</a> ## Your github’url e.g.  <a href=\"https://github.com/chaooo\">https://github.com/chaooo</a><br>title: ‘huangjun0210’ ## Your github’name e.g.  chaooo</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>about:<br>  photo_url: ‘/20221030224154.jpg’ ## Your photo e.g. /themeauthor.jpg<br>  items:</p>\n<ul>\n<li>label: email<br>url: ‘mailto:<a href=\"mailto:&#x68;&#117;&#97;&#110;&#x67;&#x6a;&#117;&#x6e;&#48;&#50;&#x31;&#x30;&#x2d;&#49;&#55;&#64;&#x31;&#x32;&#x36;&#x2e;&#x63;&#111;&#x6d;\">&#x68;&#117;&#97;&#110;&#x67;&#x6a;&#117;&#x6e;&#48;&#50;&#x31;&#x30;&#x2d;&#49;&#55;&#64;&#x31;&#x32;&#x36;&#x2e;&#x63;&#111;&#x6d;</a>‘  ## Your email with mailto: e.g.  mailto:<a href=\"mailto:&#x63;&#104;&#x61;&#x6f;&#108;&#x65;&#x73;&#64;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#x63;&#104;&#x61;&#x6f;&#108;&#x65;&#x73;&#64;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a><br>title: ‘<a href=\"mailto:&#104;&#117;&#97;&#x6e;&#x67;&#106;&#x75;&#110;&#x30;&#50;&#x31;&#48;&#45;&#49;&#x37;&#64;&#49;&#50;&#54;&#x2e;&#99;&#x6f;&#x6d;\">&#104;&#117;&#97;&#x6e;&#x67;&#106;&#x75;&#110;&#x30;&#50;&#x31;&#48;&#45;&#49;&#x37;&#64;&#49;&#50;&#54;&#x2e;&#99;&#x6f;&#x6d;</a>‘ ## Your email e.g.  <a href=\"mailto:&#99;&#x68;&#97;&#x6f;&#x6c;&#x65;&#115;&#x40;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#99;&#x68;&#97;&#x6f;&#x6c;&#x65;&#115;&#x40;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></li>\n<li>label: github<br>url: ‘<a href=\"https://github.com/huangjun0210&#39;\">https://github.com/huangjun0210&#39;</a> ## Your github’url e.g.  <a href=\"https://github.com/chaooo\">https://github.com/chaooo</a><br>title: ‘huangjun0210’ ## Your github’name e.g.  chaooo</li>\n</ul>\n"}],"Post":[{"title":"HashMap的工作原理","date":"2022-11-06T09:18:14.253Z","_content":"\nJava 中的 HashMap 是以键值对 (key-value) 的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合 / 从集合添加和检索元素。当调用 put() 方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。 如果 key 已经存在了，value 会被更新成新值。 HashMap 的一些重要的特性是它的容量 (capacity)，负载因子 (load factor) 和扩容极限(threshold resizing)。\n\n<!--more-->\n\n## 1. HashMap的存储结构\n\n数组+链表+红黑树，当链表长度大于8时，链表的数据将会以红黑树的形式进行存储，当链表长度降到6时为链表形式存储\n\n## 2. 如何解决Hash冲突\n\n如果发生Hash冲突，Hashmap通过链表将产生冲突的元素组织起来，在Java 8中，如果一个bucket中冲突的元素超过某个限制(默认是8)，则使用红黑树来替换链表，从而提高速度。\n\n## 3. Hashmap 扩容\n\n当 hashmap 中的元素个数超过数组大小 loadFactor 时，就会进行数组扩容， loadFactor 的默认值为 0。75，也就是说，默认情况下，数组大小为 16，那么当 hashmap 中元素个数超过 160。75=12 的时候，就把数组的大小扩展为 216=32，即扩大一倍，然后重新计算每个元素在数组中的位置，而这是一个非常消耗性能的操作，所以如果我们已经预知 hashmap 中元素的个数，那么预设元素的个数能够有效的提高 hashmap 的性能。比如说，我们有 1000 个元素 new HashMap(1000)，但是理论上来讲 new HashMap(1024) 更合适，不过上面 annegu 已经说过，即使是 1000，hashmap 也自动会将其设置为 1024。 但是 new HashMap(1024) 还不是更合适的，因为 0。75*1000 < 1000，也就是说为了让 0。75 * size > 1000，我们必须这样 new HashMap(2048) 才最合适，既考虑了 & 的问题，也避免了 resize 的问题。\n\n## 4. Hashmap线程安全吗\n\nHashmap不是线程安全的。\n\nHashTable和ConcuHashMap是线程安全的。\n\n### 4.1 HashTable\n\n HashTable线程安全实现是直接在关键方法上加了synchronized，但是只有一把锁。多线程访问同一个 Hashtable 就会直接造成锁冲突。（冲突概率很大，频繁加锁解锁又要耗费大量资源）size 属性也是通过 synchronized 来控制同步，也是比较慢的。一旦触发扩容，就由该线程完成整个扩容过程。这个过程会涉及到大量的元素拷贝，效率会非常低。\n\n###  4.2 ConcuHashMap\n\n相比于 Hashtable 做出了一系列的改进和优化。\n\n每个bucket一把锁。\n\n以 Java1.8 为例\n\n- 读操作没有加锁(但是使用了volatile 保证从内存读取结果)，只对写操作进行加锁（减少锁冲突概率）。\n\n- 加锁的方式仍然 是synchronized， 但是不是锁整个对象，而是 \"锁桶\" (用每个链表的头结点作为锁对象)，大大降低了锁冲突的概率\n\n- 充分利用 CAS 特性。比如 size 属性通过 CAS 来更新。避免出现重量级锁的情况。\n\n- 优化了扩容方式： 化整为零发现需要扩容的线程，只需要创建一个新的数组，同时只搬几个元素过去。扩容期间，新老数组同时存在。后续每个来操作 ConcurrentHashMap 的线程，都会参与搬家的过程。每个操作负责搬运一小 部分元素。搬完最后一个元素再把老数组删掉。这个期间，插入只往新数组加。这个期间，查找需要同时查新数组和老数组。相当于将HashTable的单次扩容所消耗的大量时间平摊到多次put过程，减少cpu的平均负荷，优化了体验。\n\n## 5. 总结\n\n- HashMap： 线程不安全。key 允许为 null 。\n- Hashtable： 线程安全。使用 synchronized 锁 Hashtable 对象，效率较低，key 不允许为 null。\n- ConcurrentHashMap： 线程安全。使用 synchronized 锁每个链表头结点， 锁冲突概率低，充分利用 CAS 机制， 优化了扩容方式，key 不允许为 null。\n\n","source":"_posts/HashMap的工作原理.md","raw":"---\ntitle: HashMap的工作原理\ndate: 2022-11-03 23：08：46\ntags: [面试]\ncategories: Java基础\n---\n\nJava 中的 HashMap 是以键值对 (key-value) 的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合 / 从集合添加和检索元素。当调用 put() 方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。 如果 key 已经存在了，value 会被更新成新值。 HashMap 的一些重要的特性是它的容量 (capacity)，负载因子 (load factor) 和扩容极限(threshold resizing)。\n\n<!--more-->\n\n## 1. HashMap的存储结构\n\n数组+链表+红黑树，当链表长度大于8时，链表的数据将会以红黑树的形式进行存储，当链表长度降到6时为链表形式存储\n\n## 2. 如何解决Hash冲突\n\n如果发生Hash冲突，Hashmap通过链表将产生冲突的元素组织起来，在Java 8中，如果一个bucket中冲突的元素超过某个限制(默认是8)，则使用红黑树来替换链表，从而提高速度。\n\n## 3. Hashmap 扩容\n\n当 hashmap 中的元素个数超过数组大小 loadFactor 时，就会进行数组扩容， loadFactor 的默认值为 0。75，也就是说，默认情况下，数组大小为 16，那么当 hashmap 中元素个数超过 160。75=12 的时候，就把数组的大小扩展为 216=32，即扩大一倍，然后重新计算每个元素在数组中的位置，而这是一个非常消耗性能的操作，所以如果我们已经预知 hashmap 中元素的个数，那么预设元素的个数能够有效的提高 hashmap 的性能。比如说，我们有 1000 个元素 new HashMap(1000)，但是理论上来讲 new HashMap(1024) 更合适，不过上面 annegu 已经说过，即使是 1000，hashmap 也自动会将其设置为 1024。 但是 new HashMap(1024) 还不是更合适的，因为 0。75*1000 < 1000，也就是说为了让 0。75 * size > 1000，我们必须这样 new HashMap(2048) 才最合适，既考虑了 & 的问题，也避免了 resize 的问题。\n\n## 4. Hashmap线程安全吗\n\nHashmap不是线程安全的。\n\nHashTable和ConcuHashMap是线程安全的。\n\n### 4.1 HashTable\n\n HashTable线程安全实现是直接在关键方法上加了synchronized，但是只有一把锁。多线程访问同一个 Hashtable 就会直接造成锁冲突。（冲突概率很大，频繁加锁解锁又要耗费大量资源）size 属性也是通过 synchronized 来控制同步，也是比较慢的。一旦触发扩容，就由该线程完成整个扩容过程。这个过程会涉及到大量的元素拷贝，效率会非常低。\n\n###  4.2 ConcuHashMap\n\n相比于 Hashtable 做出了一系列的改进和优化。\n\n每个bucket一把锁。\n\n以 Java1.8 为例\n\n- 读操作没有加锁(但是使用了volatile 保证从内存读取结果)，只对写操作进行加锁（减少锁冲突概率）。\n\n- 加锁的方式仍然 是synchronized， 但是不是锁整个对象，而是 \"锁桶\" (用每个链表的头结点作为锁对象)，大大降低了锁冲突的概率\n\n- 充分利用 CAS 特性。比如 size 属性通过 CAS 来更新。避免出现重量级锁的情况。\n\n- 优化了扩容方式： 化整为零发现需要扩容的线程，只需要创建一个新的数组，同时只搬几个元素过去。扩容期间，新老数组同时存在。后续每个来操作 ConcurrentHashMap 的线程，都会参与搬家的过程。每个操作负责搬运一小 部分元素。搬完最后一个元素再把老数组删掉。这个期间，插入只往新数组加。这个期间，查找需要同时查新数组和老数组。相当于将HashTable的单次扩容所消耗的大量时间平摊到多次put过程，减少cpu的平均负荷，优化了体验。\n\n## 5. 总结\n\n- HashMap： 线程不安全。key 允许为 null 。\n- Hashtable： 线程安全。使用 synchronized 锁 Hashtable 对象，效率较低，key 不允许为 null。\n- ConcurrentHashMap： 线程安全。使用 synchronized 锁每个链表头结点， 锁冲突概率低，充分利用 CAS 机制， 优化了扩容方式，key 不允许为 null。\n\n","slug":"HashMap的工作原理","published":1,"updated":"2022-11-06T09:22:59.130Z","_id":"cla18w0lj00018cve74uh0xtu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Java 中的 HashMap 是以键值对 (key-value) 的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合 / 从集合添加和检索元素。当调用 put() 方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。 如果 key 已经存在了，value 会被更新成新值。 HashMap 的一些重要的特性是它的容量 (capacity)，负载因子 (load factor) 和扩容极限(threshold resizing)。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"1-HashMap的存储结构\"><a href=\"#1-HashMap的存储结构\" class=\"headerlink\" title=\"1. HashMap的存储结构\"></a>1. HashMap的存储结构</h2><p>数组+链表+红黑树，当链表长度大于8时，链表的数据将会以红黑树的形式进行存储，当链表长度降到6时为链表形式存储</p>\n<h2 id=\"2-如何解决Hash冲突\"><a href=\"#2-如何解决Hash冲突\" class=\"headerlink\" title=\"2. 如何解决Hash冲突\"></a>2. 如何解决Hash冲突</h2><p>如果发生Hash冲突，Hashmap通过链表将产生冲突的元素组织起来，在Java 8中，如果一个bucket中冲突的元素超过某个限制(默认是8)，则使用红黑树来替换链表，从而提高速度。</p>\n<h2 id=\"3-Hashmap-扩容\"><a href=\"#3-Hashmap-扩容\" class=\"headerlink\" title=\"3. Hashmap 扩容\"></a>3. Hashmap 扩容</h2><p>当 hashmap 中的元素个数超过数组大小 loadFactor 时，就会进行数组扩容， loadFactor 的默认值为 0。75，也就是说，默认情况下，数组大小为 16，那么当 hashmap 中元素个数超过 160。75=12 的时候，就把数组的大小扩展为 216=32，即扩大一倍，然后重新计算每个元素在数组中的位置，而这是一个非常消耗性能的操作，所以如果我们已经预知 hashmap 中元素的个数，那么预设元素的个数能够有效的提高 hashmap 的性能。比如说，我们有 1000 个元素 new HashMap(1000)，但是理论上来讲 new HashMap(1024) 更合适，不过上面 annegu 已经说过，即使是 1000，hashmap 也自动会将其设置为 1024。 但是 new HashMap(1024) 还不是更合适的，因为 0。75*1000 &lt; 1000，也就是说为了让 0。75 * size &gt; 1000，我们必须这样 new HashMap(2048) 才最合适，既考虑了 &amp; 的问题，也避免了 resize 的问题。</p>\n<h2 id=\"4-Hashmap线程安全吗\"><a href=\"#4-Hashmap线程安全吗\" class=\"headerlink\" title=\"4. Hashmap线程安全吗\"></a>4. Hashmap线程安全吗</h2><p>Hashmap不是线程安全的。</p>\n<p>HashTable和ConcuHashMap是线程安全的。</p>\n<h3 id=\"4-1-HashTable\"><a href=\"#4-1-HashTable\" class=\"headerlink\" title=\"4.1 HashTable\"></a>4.1 HashTable</h3><p> HashTable线程安全实现是直接在关键方法上加了synchronized，但是只有一把锁。多线程访问同一个 Hashtable 就会直接造成锁冲突。（冲突概率很大，频繁加锁解锁又要耗费大量资源）size 属性也是通过 synchronized 来控制同步，也是比较慢的。一旦触发扩容，就由该线程完成整个扩容过程。这个过程会涉及到大量的元素拷贝，效率会非常低。</p>\n<h3 id=\"4-2-ConcuHashMap\"><a href=\"#4-2-ConcuHashMap\" class=\"headerlink\" title=\"4.2 ConcuHashMap\"></a>4.2 ConcuHashMap</h3><p>相比于 Hashtable 做出了一系列的改进和优化。</p>\n<p>每个bucket一把锁。</p>\n<p>以 Java1.8 为例</p>\n<ul>\n<li><p>读操作没有加锁(但是使用了volatile 保证从内存读取结果)，只对写操作进行加锁（减少锁冲突概率）。</p>\n</li>\n<li><p>加锁的方式仍然 是synchronized， 但是不是锁整个对象，而是 “锁桶” (用每个链表的头结点作为锁对象)，大大降低了锁冲突的概率</p>\n</li>\n<li><p>充分利用 CAS 特性。比如 size 属性通过 CAS 来更新。避免出现重量级锁的情况。</p>\n</li>\n<li><p>优化了扩容方式： 化整为零发现需要扩容的线程，只需要创建一个新的数组，同时只搬几个元素过去。扩容期间，新老数组同时存在。后续每个来操作 ConcurrentHashMap 的线程，都会参与搬家的过程。每个操作负责搬运一小 部分元素。搬完最后一个元素再把老数组删掉。这个期间，插入只往新数组加。这个期间，查找需要同时查新数组和老数组。相当于将HashTable的单次扩容所消耗的大量时间平摊到多次put过程，减少cpu的平均负荷，优化了体验。</p>\n</li>\n</ul>\n<h2 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5. 总结\"></a>5. 总结</h2><ul>\n<li>HashMap： 线程不安全。key 允许为 null 。</li>\n<li>Hashtable： 线程安全。使用 synchronized 锁 Hashtable 对象，效率较低，key 不允许为 null。</li>\n<li>ConcurrentHashMap： 线程安全。使用 synchronized 锁每个链表头结点， 锁冲突概率低，充分利用 CAS 机制， 优化了扩容方式，key 不允许为 null。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Java 中的 HashMap 是以键值对 (key-value) 的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合 / 从集合添加和检索元素。当调用 put() 方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。 如果 key 已经存在了，value 会被更新成新值。 HashMap 的一些重要的特性是它的容量 (capacity)，负载因子 (load factor) 和扩容极限(threshold resizing)。</p>","more":"<h2 id=\"1-HashMap的存储结构\"><a href=\"#1-HashMap的存储结构\" class=\"headerlink\" title=\"1. HashMap的存储结构\"></a>1. HashMap的存储结构</h2><p>数组+链表+红黑树，当链表长度大于8时，链表的数据将会以红黑树的形式进行存储，当链表长度降到6时为链表形式存储</p>\n<h2 id=\"2-如何解决Hash冲突\"><a href=\"#2-如何解决Hash冲突\" class=\"headerlink\" title=\"2. 如何解决Hash冲突\"></a>2. 如何解决Hash冲突</h2><p>如果发生Hash冲突，Hashmap通过链表将产生冲突的元素组织起来，在Java 8中，如果一个bucket中冲突的元素超过某个限制(默认是8)，则使用红黑树来替换链表，从而提高速度。</p>\n<h2 id=\"3-Hashmap-扩容\"><a href=\"#3-Hashmap-扩容\" class=\"headerlink\" title=\"3. Hashmap 扩容\"></a>3. Hashmap 扩容</h2><p>当 hashmap 中的元素个数超过数组大小 loadFactor 时，就会进行数组扩容， loadFactor 的默认值为 0。75，也就是说，默认情况下，数组大小为 16，那么当 hashmap 中元素个数超过 160。75=12 的时候，就把数组的大小扩展为 216=32，即扩大一倍，然后重新计算每个元素在数组中的位置，而这是一个非常消耗性能的操作，所以如果我们已经预知 hashmap 中元素的个数，那么预设元素的个数能够有效的提高 hashmap 的性能。比如说，我们有 1000 个元素 new HashMap(1000)，但是理论上来讲 new HashMap(1024) 更合适，不过上面 annegu 已经说过，即使是 1000，hashmap 也自动会将其设置为 1024。 但是 new HashMap(1024) 还不是更合适的，因为 0。75*1000 &lt; 1000，也就是说为了让 0。75 * size &gt; 1000，我们必须这样 new HashMap(2048) 才最合适，既考虑了 &amp; 的问题，也避免了 resize 的问题。</p>\n<h2 id=\"4-Hashmap线程安全吗\"><a href=\"#4-Hashmap线程安全吗\" class=\"headerlink\" title=\"4. Hashmap线程安全吗\"></a>4. Hashmap线程安全吗</h2><p>Hashmap不是线程安全的。</p>\n<p>HashTable和ConcuHashMap是线程安全的。</p>\n<h3 id=\"4-1-HashTable\"><a href=\"#4-1-HashTable\" class=\"headerlink\" title=\"4.1 HashTable\"></a>4.1 HashTable</h3><p> HashTable线程安全实现是直接在关键方法上加了synchronized，但是只有一把锁。多线程访问同一个 Hashtable 就会直接造成锁冲突。（冲突概率很大，频繁加锁解锁又要耗费大量资源）size 属性也是通过 synchronized 来控制同步，也是比较慢的。一旦触发扩容，就由该线程完成整个扩容过程。这个过程会涉及到大量的元素拷贝，效率会非常低。</p>\n<h3 id=\"4-2-ConcuHashMap\"><a href=\"#4-2-ConcuHashMap\" class=\"headerlink\" title=\"4.2 ConcuHashMap\"></a>4.2 ConcuHashMap</h3><p>相比于 Hashtable 做出了一系列的改进和优化。</p>\n<p>每个bucket一把锁。</p>\n<p>以 Java1.8 为例</p>\n<ul>\n<li><p>读操作没有加锁(但是使用了volatile 保证从内存读取结果)，只对写操作进行加锁（减少锁冲突概率）。</p>\n</li>\n<li><p>加锁的方式仍然 是synchronized， 但是不是锁整个对象，而是 “锁桶” (用每个链表的头结点作为锁对象)，大大降低了锁冲突的概率</p>\n</li>\n<li><p>充分利用 CAS 特性。比如 size 属性通过 CAS 来更新。避免出现重量级锁的情况。</p>\n</li>\n<li><p>优化了扩容方式： 化整为零发现需要扩容的线程，只需要创建一个新的数组，同时只搬几个元素过去。扩容期间，新老数组同时存在。后续每个来操作 ConcurrentHashMap 的线程，都会参与搬家的过程。每个操作负责搬运一小 部分元素。搬完最后一个元素再把老数组删掉。这个期间，插入只往新数组加。这个期间，查找需要同时查新数组和老数组。相当于将HashTable的单次扩容所消耗的大量时间平摊到多次put过程，减少cpu的平均负荷，优化了体验。</p>\n</li>\n</ul>\n<h2 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5. 总结\"></a>5. 总结</h2><ul>\n<li>HashMap： 线程不安全。key 允许为 null 。</li>\n<li>Hashtable： 线程安全。使用 synchronized 锁 Hashtable 对象，效率较低，key 不允许为 null。</li>\n<li>ConcurrentHashMap： 线程安全。使用 synchronized 锁每个链表头结点， 锁冲突概率低，充分利用 CAS 机制， 优化了扩容方式，key 不允许为 null。</li>\n</ul>"},{"title":"Hexo+github搭建个人博客","date":"2022-10-31T14:24:53.000Z","top":true,"_content":"\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 [Markdown](http://daringfireball.net/projects/markdown/)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文记录如何搭建Hexo，并使用比较干净整洁的BlueLake主题进行渲染。综合官网教程以及自己在安装过程写下了本教程，一步一步来就可以无痛安装。\n\n<!--more-->\n\n## 1. 安装 Hexo\n\n> nodejs、git等安装，与github的配置略\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```shell\nnpm install -g hexo-cli\n```\n\n安装以后，可以使用以下两种方式执行 Hexo：\n\n1. `npx hexo <command>`\n2. 将 Hexo 所在的目录下的 `node_modules` 添加到环境变量之中即可直接使用 `hexo <command>`：\n\n```\necho 'PATH=\"$PATH:./node_modules/.bin\"' >> ~/.profile\n```\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n```shell\n hexo init <folder>\n cd <folder>\n npm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n```shell\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n上传到Github配置\n\n```shell\ndeploy:\n  type: git\n  repo: https://github.com/huangjun0210/huangjun0210.github.io.git\n  branch: gh-pages\n```\n\n生成本地页面\n\n```shell\nhexo s\n```\n\n安装hexo-deployer-git 自动部署发布工具\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n生成静态页面\n\n```shell\nhexo g\n```\n\n本地文件上传到Github上面\n\n```shell\nhexo d\n```\n\n## 2. 安装BlueLake\n\n### 2.1 安装主题\n\n在根目录下打开终端窗口：\n\n```\ngit bashgit clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/bluelake\n```\n\n### 2.2 安装主题插件\n\n在根目录下打开终端窗口：\n\n```\ngit bashnpm install hexo-renderer-jade --save\nnpm install hexo-renderer-stylus --save\nnpm install hexo-generator-feed --save\nnpm install hexo-generator-sitemap --save\n```\n\n### 2.3 启用主题\n\n打开`_config.yml`配置文件，找到theme字段，将其值改为`bluelake`(先确认主题文件夹名称是否为bluelake)。\n\n```\ntheme: bluelake\n```\n\n### 2.4 验证\n\n首先启动 Hexo 本地站点，并开启调试模式：\n\n```\ngit bashhexo s --debug\n```\n\n在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：`INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.`\n此时即可使用浏览器访问 `http://localhost:4000`，检查站点是否正确运行。\n\n### 2.5 更新主题\n\n今后若主题添加了新功能正是您需要的，您可以直接`git pull`来更新主题。\n\n```\ngit bashcd themes/bluelake\ngit pull\n```\n\n### 2.6 配置\n\n#### 2.6.1  配置网站头部显示文字\n\n打开`_config.yml`，找到：\n\n```\ntitle:     # 标题，如：秋过冬漫长\nsubtitle:  # 副标题，如：没有比脚更长的路，走过去，前面是个天！\ndescription: # 网站关键字，如：key, key1, key2, key3\nkeywords:\nauthor:\n```\n\n- `title`和`subtitle`分别是网站主标题和副标题，会显示在网站头部；\n- `description`在网站界面不会显示，内容会加入网站源码的`meta`标签中，主要用于SEO；\n- `keywords`在网站界面不会显示，内容会加入网站源码的`meta`标签中，主要用于SEO；\n- `author`就填写网站所有者的名字，会在网站底部的`Copyright`处有所显示。\n\n#### 2.6.2 设置语言\n\n该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在`根_config.yml`配置如下：\n\n```\nlanguage: zh-CN\n```\n\n#### 2.6.3 设置菜单\n\n打开`主题_config.yml`，找到：\n\n```\nmenu:\n  - page: home\n    directory: .\n    icon: fa-home\n  - page: archive\n    directory: archives/\n    icon: fa-archive\n  # - page: about\n  #   directory: about/\n  #   icon: fa-user\n  - page: rss\n    directory: atom.xml\n    icon: fa-rss\n```\n\n主题默认是展示四个菜单，即`主页home`，`归档archive`，`关于about`，`订阅RSS`；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。\n\n#### 2.6.4 添加about页\n\n此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面：\n\n```\nhexo new page 'about'\n```\n\n打开`主题_config.yml`，补全about页面的详细信息：\n\n```\nabout:\n  photo_url: # 头像的链接地址 e.g. http://cdn.itdn.top/blog/themeauthor.jpg\n  items:\n  - label: email # 个人邮箱\n    url: ## Your email with mailto: e.g.  mailto:zhenggchaoo@gmail.com\n    title: ## Your email e.g.  zhenggchaoo@gmail.com\n  - label: github # github\n    url: ## Your github'url e.g.  https://github.com/chaooo\n    title: ## Your github'name e.g.  chaooo\n  - label: weibo # 微博\n    url: ## Your weibo's url e.g.  http://weibo.com/zhengchaooo\n    title: ## Your weibo's name e.g.  秋过冬漫长\n```\n\n当然您也可以自定义重新布局about页面，只需要修改`layout/page.jade`模板就好。\n\n#### 2.6.5 添加本地搜索\n\n默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件[hexo-generator-json-content](https://github.com/alexbruno/hexo-generator-json-content)来创建JSON数据文件：\n\n```\ngit bashnpm install hexo-generator-json-content@2.2.0 --save\n```\n\n然后在`根_config.yml`添加配置：\n\n```\njsonContent:\n  meta: false\n  pages: false\n  posts:\n    title: true\n    date: true\n    path: true\n    text: true\n    raw: false\n    content: false\n    slug: false\n    updated: false\n    comments: false\n    link: false\n    permalink: false\n    excerpt: false\n    categories: false\n    tags: true\n```\n\n最后在`主题_config.yml`添加配置：\n\n```\nlocal_search: true\n```\n\n#### 2.6.6 首页添加文章置顶\n\n在根目录下打开命令行窗口安装：\n\n```\nnpm uninstall hexo-generator-index --save\nnpm install hexo-generator-index-pin-top --save\n```\n\n然后在需要置顶的文章的Front-matter中加上top: true即可。\n\n```\n---\ntitle: BlueLake博客主题的详细配置\ntags: [hexo,BlueLake]\ncategories: Hexo博客\ntop: true\n---\n```\n\n#### 2.6.7 撰写文章\n\n```shell\nhexo new post \"新建博客文章名\"\n```\n\n\n\n### 2.7 集成第三方服务\n\n#### 2.7.1 添加评论\n\n目前主题集成多种第三方评论，比如基于Github Issue的[GITALK](https://gitalk.github.io/)），[Valine](https://valine.js.org/)评论，[畅言评论](http://changyan.kuaizhan.com/)，[Disqus评论](https://disqus.com/)、[来必力评论](https://livere.com/)、[友言评论](http://www.uyan.cc/)、[网易云跟帖评论](https://gentie.163.com/info.html)等。\n\n配置`主题_config.yml`：\n\n```\n# Gitalk comment\ngitalk:\n  enable: false\n  owner: ## Your GitHub ID, e.g. username\n  repo: ## The repository to store your comments, make sure you're the repo's owner, e.g. gitalk.github.io\n  client_id: ## GitHub client ID, e.g. 75752dafe7907a897619\n  client_secret: ## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50\n  admin: ## Github repo owner and collaborators, only these guys can initialize github issues.\n  language: 'zh-CN' ## Language\n  pagerDirection: last # Comment sorting direction, available values are last and first.\n\n# Valine comment. https://valine.js.org\nvaline:\n  enable: false # if you want use valine,please set this value is true\n  appId: # leancloud application app id\n  appKey: # leancloud application app key\n  notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki\n  verify: false # valine verify code (true/false)\n  pageSize: 10 # comment list page size\n  avatar: mm # gravatar style https://valine.js.org/#/avatar\n  lang: zh-cn # i18n: zh-cn/en\n  placeholder: Just go go # valine comment input placeholder(like: Please leave your footprints )\n  guest_info: nick,mail,link #valine comment header info\n\n# Changyan comment. 畅言\nchangyan:\n  enable: false\n  appid: ## changyan appid\n  appkey: ## changyan appkey\n\n# Other comments\ncomment:\n  disqus: ## disqus_shortname\n  livere: ## 来必力(data-uid)\n  uyan: ## 友言(uid)\n  cloudTie: ## 网易云跟帖(productKey)\n```\n\n#### 2.7.2 站点统计\n\n```\nbusuanzi: true  # 卜算子阅读次数统计\nbaidu_analytics: # 百度统计\ngoogle_analytics: # 谷歌统计\ngauges_analytics: # Gauges\n```\n\n##### 2.7.2.1 卜算子阅读次数统计\n\n若busuanzi设置为true将计算文章的阅读量，及网站的访问量与访客数，并显示在文章标题下和网站底部。\n\n##### 2.7.2.2 百度统计\n\n登录百度统计，定位到站点的代码获取页面。复制`//hm.baidu.com/hm.js?`后面那串统计脚本id(假设为：`8006843039519956000`)\n\n```\nbaidu_analytics: 8006843039519956000\n```\n\n> 注意： baidu_analytics不是你的百度id或者百度统计id，如若使用其他统计，配置方法与百度统计类似。\n\n\n\n参考链接：\n\n[hexo官网]: https://hexo.io/zh-cn/\n[BlueLake博客主题的详细配置]: https://chaooo.github.io/2016/12/29/bluelake.html\n\n","source":"_posts/Hexo-github搭建个人博客.md","raw":"---\ntitle: Hexo+github搭建个人博客\ndate: 2022-10-31 22:24:53\ntags: [hexo,BlueLake]\ncategories: 博客搭建\ntop: true\n---\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 [Markdown](http://daringfireball.net/projects/markdown/)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文记录如何搭建Hexo，并使用比较干净整洁的BlueLake主题进行渲染。综合官网教程以及自己在安装过程写下了本教程，一步一步来就可以无痛安装。\n\n<!--more-->\n\n## 1. 安装 Hexo\n\n> nodejs、git等安装，与github的配置略\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```shell\nnpm install -g hexo-cli\n```\n\n安装以后，可以使用以下两种方式执行 Hexo：\n\n1. `npx hexo <command>`\n2. 将 Hexo 所在的目录下的 `node_modules` 添加到环境变量之中即可直接使用 `hexo <command>`：\n\n```\necho 'PATH=\"$PATH:./node_modules/.bin\"' >> ~/.profile\n```\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n```shell\n hexo init <folder>\n cd <folder>\n npm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n```shell\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n上传到Github配置\n\n```shell\ndeploy:\n  type: git\n  repo: https://github.com/huangjun0210/huangjun0210.github.io.git\n  branch: gh-pages\n```\n\n生成本地页面\n\n```shell\nhexo s\n```\n\n安装hexo-deployer-git 自动部署发布工具\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n生成静态页面\n\n```shell\nhexo g\n```\n\n本地文件上传到Github上面\n\n```shell\nhexo d\n```\n\n## 2. 安装BlueLake\n\n### 2.1 安装主题\n\n在根目录下打开终端窗口：\n\n```\ngit bashgit clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/bluelake\n```\n\n### 2.2 安装主题插件\n\n在根目录下打开终端窗口：\n\n```\ngit bashnpm install hexo-renderer-jade --save\nnpm install hexo-renderer-stylus --save\nnpm install hexo-generator-feed --save\nnpm install hexo-generator-sitemap --save\n```\n\n### 2.3 启用主题\n\n打开`_config.yml`配置文件，找到theme字段，将其值改为`bluelake`(先确认主题文件夹名称是否为bluelake)。\n\n```\ntheme: bluelake\n```\n\n### 2.4 验证\n\n首先启动 Hexo 本地站点，并开启调试模式：\n\n```\ngit bashhexo s --debug\n```\n\n在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：`INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.`\n此时即可使用浏览器访问 `http://localhost:4000`，检查站点是否正确运行。\n\n### 2.5 更新主题\n\n今后若主题添加了新功能正是您需要的，您可以直接`git pull`来更新主题。\n\n```\ngit bashcd themes/bluelake\ngit pull\n```\n\n### 2.6 配置\n\n#### 2.6.1  配置网站头部显示文字\n\n打开`_config.yml`，找到：\n\n```\ntitle:     # 标题，如：秋过冬漫长\nsubtitle:  # 副标题，如：没有比脚更长的路，走过去，前面是个天！\ndescription: # 网站关键字，如：key, key1, key2, key3\nkeywords:\nauthor:\n```\n\n- `title`和`subtitle`分别是网站主标题和副标题，会显示在网站头部；\n- `description`在网站界面不会显示，内容会加入网站源码的`meta`标签中，主要用于SEO；\n- `keywords`在网站界面不会显示，内容会加入网站源码的`meta`标签中，主要用于SEO；\n- `author`就填写网站所有者的名字，会在网站底部的`Copyright`处有所显示。\n\n#### 2.6.2 设置语言\n\n该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在`根_config.yml`配置如下：\n\n```\nlanguage: zh-CN\n```\n\n#### 2.6.3 设置菜单\n\n打开`主题_config.yml`，找到：\n\n```\nmenu:\n  - page: home\n    directory: .\n    icon: fa-home\n  - page: archive\n    directory: archives/\n    icon: fa-archive\n  # - page: about\n  #   directory: about/\n  #   icon: fa-user\n  - page: rss\n    directory: atom.xml\n    icon: fa-rss\n```\n\n主题默认是展示四个菜单，即`主页home`，`归档archive`，`关于about`，`订阅RSS`；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。\n\n#### 2.6.4 添加about页\n\n此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面：\n\n```\nhexo new page 'about'\n```\n\n打开`主题_config.yml`，补全about页面的详细信息：\n\n```\nabout:\n  photo_url: # 头像的链接地址 e.g. http://cdn.itdn.top/blog/themeauthor.jpg\n  items:\n  - label: email # 个人邮箱\n    url: ## Your email with mailto: e.g.  mailto:zhenggchaoo@gmail.com\n    title: ## Your email e.g.  zhenggchaoo@gmail.com\n  - label: github # github\n    url: ## Your github'url e.g.  https://github.com/chaooo\n    title: ## Your github'name e.g.  chaooo\n  - label: weibo # 微博\n    url: ## Your weibo's url e.g.  http://weibo.com/zhengchaooo\n    title: ## Your weibo's name e.g.  秋过冬漫长\n```\n\n当然您也可以自定义重新布局about页面，只需要修改`layout/page.jade`模板就好。\n\n#### 2.6.5 添加本地搜索\n\n默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件[hexo-generator-json-content](https://github.com/alexbruno/hexo-generator-json-content)来创建JSON数据文件：\n\n```\ngit bashnpm install hexo-generator-json-content@2.2.0 --save\n```\n\n然后在`根_config.yml`添加配置：\n\n```\njsonContent:\n  meta: false\n  pages: false\n  posts:\n    title: true\n    date: true\n    path: true\n    text: true\n    raw: false\n    content: false\n    slug: false\n    updated: false\n    comments: false\n    link: false\n    permalink: false\n    excerpt: false\n    categories: false\n    tags: true\n```\n\n最后在`主题_config.yml`添加配置：\n\n```\nlocal_search: true\n```\n\n#### 2.6.6 首页添加文章置顶\n\n在根目录下打开命令行窗口安装：\n\n```\nnpm uninstall hexo-generator-index --save\nnpm install hexo-generator-index-pin-top --save\n```\n\n然后在需要置顶的文章的Front-matter中加上top: true即可。\n\n```\n---\ntitle: BlueLake博客主题的详细配置\ntags: [hexo,BlueLake]\ncategories: Hexo博客\ntop: true\n---\n```\n\n#### 2.6.7 撰写文章\n\n```shell\nhexo new post \"新建博客文章名\"\n```\n\n\n\n### 2.7 集成第三方服务\n\n#### 2.7.1 添加评论\n\n目前主题集成多种第三方评论，比如基于Github Issue的[GITALK](https://gitalk.github.io/)），[Valine](https://valine.js.org/)评论，[畅言评论](http://changyan.kuaizhan.com/)，[Disqus评论](https://disqus.com/)、[来必力评论](https://livere.com/)、[友言评论](http://www.uyan.cc/)、[网易云跟帖评论](https://gentie.163.com/info.html)等。\n\n配置`主题_config.yml`：\n\n```\n# Gitalk comment\ngitalk:\n  enable: false\n  owner: ## Your GitHub ID, e.g. username\n  repo: ## The repository to store your comments, make sure you're the repo's owner, e.g. gitalk.github.io\n  client_id: ## GitHub client ID, e.g. 75752dafe7907a897619\n  client_secret: ## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50\n  admin: ## Github repo owner and collaborators, only these guys can initialize github issues.\n  language: 'zh-CN' ## Language\n  pagerDirection: last # Comment sorting direction, available values are last and first.\n\n# Valine comment. https://valine.js.org\nvaline:\n  enable: false # if you want use valine,please set this value is true\n  appId: # leancloud application app id\n  appKey: # leancloud application app key\n  notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki\n  verify: false # valine verify code (true/false)\n  pageSize: 10 # comment list page size\n  avatar: mm # gravatar style https://valine.js.org/#/avatar\n  lang: zh-cn # i18n: zh-cn/en\n  placeholder: Just go go # valine comment input placeholder(like: Please leave your footprints )\n  guest_info: nick,mail,link #valine comment header info\n\n# Changyan comment. 畅言\nchangyan:\n  enable: false\n  appid: ## changyan appid\n  appkey: ## changyan appkey\n\n# Other comments\ncomment:\n  disqus: ## disqus_shortname\n  livere: ## 来必力(data-uid)\n  uyan: ## 友言(uid)\n  cloudTie: ## 网易云跟帖(productKey)\n```\n\n#### 2.7.2 站点统计\n\n```\nbusuanzi: true  # 卜算子阅读次数统计\nbaidu_analytics: # 百度统计\ngoogle_analytics: # 谷歌统计\ngauges_analytics: # Gauges\n```\n\n##### 2.7.2.1 卜算子阅读次数统计\n\n若busuanzi设置为true将计算文章的阅读量，及网站的访问量与访客数，并显示在文章标题下和网站底部。\n\n##### 2.7.2.2 百度统计\n\n登录百度统计，定位到站点的代码获取页面。复制`//hm.baidu.com/hm.js?`后面那串统计脚本id(假设为：`8006843039519956000`)\n\n```\nbaidu_analytics: 8006843039519956000\n```\n\n> 注意： baidu_analytics不是你的百度id或者百度统计id，如若使用其他统计，配置方法与百度统计类似。\n\n\n\n参考链接：\n\n[hexo官网]: https://hexo.io/zh-cn/\n[BlueLake博客主题的详细配置]: https://chaooo.github.io/2016/12/29/bluelake.html\n\n","slug":"Hexo-github搭建个人博客","published":1,"updated":"2022-11-03T15:04:07.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla18w0m100078cvedyd055x2","content":"<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文记录如何搭建Hexo，并使用比较干净整洁的BlueLake主题进行渲染。综合官网教程以及自己在安装过程写下了本教程，一步一步来就可以无痛安装。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"1-安装-Hexo\"><a href=\"#1-安装-Hexo\" class=\"headerlink\" title=\"1. 安装 Hexo\"></a>1. 安装 Hexo</h2><blockquote>\n<p>nodejs、git等安装，与github的配置略</p>\n</blockquote>\n<p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>安装以后，可以使用以下两种方式执行 Hexo：</p>\n<ol>\n<li><code>npx hexo &lt;command&gt;</code></li>\n<li>将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure>\n\n<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\">cd &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n\n<p>上传到Github配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/huangjun0210/huangjun0210.github.io.git</span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n\n<p>生成本地页面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>安装hexo-deployer-git 自动部署发布工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>生成静态页面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<p>本地文件上传到Github上面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-安装BlueLake\"><a href=\"#2-安装BlueLake\" class=\"headerlink\" title=\"2. 安装BlueLake\"></a>2. 安装BlueLake</h2><h3 id=\"2-1-安装主题\"><a href=\"#2-1-安装主题\" class=\"headerlink\" title=\"2.1 安装主题\"></a>2.1 安装主题</h3><p>在根目录下打开终端窗口：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashgit clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/bluelake</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-安装主题插件\"><a href=\"#2-2-安装主题插件\" class=\"headerlink\" title=\"2.2 安装主题插件\"></a>2.2 安装主题插件</h3><p>在根目录下打开终端窗口：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashnpm install hexo-renderer-jade --save</span><br><span class=\"line\">npm install hexo-renderer-stylus --save</span><br><span class=\"line\">npm install hexo-generator-feed --save</span><br><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-启用主题\"><a href=\"#2-3-启用主题\" class=\"headerlink\" title=\"2.3 启用主题\"></a>2.3 启用主题</h3><p>打开<code>_config.yml</code>配置文件，找到theme字段，将其值改为<code>bluelake</code>(先确认主题文件夹名称是否为bluelake)。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: bluelake</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-验证\"><a href=\"#2-4-验证\" class=\"headerlink\" title=\"2.4 验证\"></a>2.4 验证</h3><p>首先启动 Hexo 本地站点，并开启调试模式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashhexo s --debug</span><br></pre></td></tr></table></figure>\n\n<p>在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：<code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code><br>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p>\n<h3 id=\"2-5-更新主题\"><a href=\"#2-5-更新主题\" class=\"headerlink\" title=\"2.5 更新主题\"></a>2.5 更新主题</h3><p>今后若主题添加了新功能正是您需要的，您可以直接<code>git pull</code>来更新主题。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashcd themes/bluelake</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-6-配置\"><a href=\"#2-6-配置\" class=\"headerlink\" title=\"2.6 配置\"></a>2.6 配置</h3><h4 id=\"2-6-1-配置网站头部显示文字\"><a href=\"#2-6-1-配置网站头部显示文字\" class=\"headerlink\" title=\"2.6.1  配置网站头部显示文字\"></a>2.6.1  配置网站头部显示文字</h4><p>打开<code>_config.yml</code>，找到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title:     # 标题，如：秋过冬漫长</span><br><span class=\"line\">subtitle:  # 副标题，如：没有比脚更长的路，走过去，前面是个天！</span><br><span class=\"line\">description: # 网站关键字，如：key, key1, key2, key3</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">author:</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>title</code>和<code>subtitle</code>分别是网站主标题和副标题，会显示在网站头部；</li>\n<li><code>description</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；</li>\n<li><code>keywords</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；</li>\n<li><code>author</code>就填写网站所有者的名字，会在网站底部的<code>Copyright</code>处有所显示。</li>\n</ul>\n<h4 id=\"2-6-2-设置语言\"><a href=\"#2-6-2-设置语言\" class=\"headerlink\" title=\"2.6.2 设置语言\"></a>2.6.2 设置语言</h4><p>该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在<code>根_config.yml</code>配置如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-CN</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-6-3-设置菜单\"><a href=\"#2-6-3-设置菜单\" class=\"headerlink\" title=\"2.6.3 设置菜单\"></a>2.6.3 设置菜单</h4><p>打开<code>主题_config.yml</code>，找到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  - page: home</span><br><span class=\"line\">    directory: .</span><br><span class=\"line\">    icon: fa-home</span><br><span class=\"line\">  - page: archive</span><br><span class=\"line\">    directory: archives/</span><br><span class=\"line\">    icon: fa-archive</span><br><span class=\"line\">  # - page: about</span><br><span class=\"line\">  #   directory: about/</span><br><span class=\"line\">  #   icon: fa-user</span><br><span class=\"line\">  - page: rss</span><br><span class=\"line\">    directory: atom.xml</span><br><span class=\"line\">    icon: fa-rss</span><br></pre></td></tr></table></figure>\n\n<p>主题默认是展示四个菜单，即<code>主页home</code>，<code>归档archive</code>，<code>关于about</code>，<code>订阅RSS</code>；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。</p>\n<h4 id=\"2-6-4-添加about页\"><a href=\"#2-6-4-添加about页\" class=\"headerlink\" title=\"2.6.4 添加about页\"></a>2.6.4 添加about页</h4><p>此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &#x27;about&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>打开<code>主题_config.yml</code>，补全about页面的详细信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">about:</span><br><span class=\"line\">  photo_url: # 头像的链接地址 e.g. http://cdn.itdn.top/blog/themeauthor.jpg</span><br><span class=\"line\">  items:</span><br><span class=\"line\">  - label: email # 个人邮箱</span><br><span class=\"line\">    url: ## Your email with mailto: e.g.  mailto:zhenggchaoo@gmail.com</span><br><span class=\"line\">    title: ## Your email e.g.  zhenggchaoo@gmail.com</span><br><span class=\"line\">  - label: github # github</span><br><span class=\"line\">    url: ## Your github&#x27;url e.g.  https://github.com/chaooo</span><br><span class=\"line\">    title: ## Your github&#x27;name e.g.  chaooo</span><br><span class=\"line\">  - label: weibo # 微博</span><br><span class=\"line\">    url: ## Your weibo&#x27;s url e.g.  http://weibo.com/zhengchaooo</span><br><span class=\"line\">    title: ## Your weibo&#x27;s name e.g.  秋过冬漫长</span><br></pre></td></tr></table></figure>\n\n<p>当然您也可以自定义重新布局about页面，只需要修改<code>layout/page.jade</code>模板就好。</p>\n<h4 id=\"2-6-5-添加本地搜索\"><a href=\"#2-6-5-添加本地搜索\" class=\"headerlink\" title=\"2.6.5 添加本地搜索\"></a>2.6.5 添加本地搜索</h4><p>默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件<a href=\"https://github.com/alexbruno/hexo-generator-json-content\">hexo-generator-json-content</a>来创建JSON数据文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashnpm install hexo-generator-json-content@2.2.0 --save</span><br></pre></td></tr></table></figure>\n\n<p>然后在<code>根_config.yml</code>添加配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonContent:</span><br><span class=\"line\">  meta: false</span><br><span class=\"line\">  pages: false</span><br><span class=\"line\">  posts:</span><br><span class=\"line\">    title: true</span><br><span class=\"line\">    date: true</span><br><span class=\"line\">    path: true</span><br><span class=\"line\">    text: true</span><br><span class=\"line\">    raw: false</span><br><span class=\"line\">    content: false</span><br><span class=\"line\">    slug: false</span><br><span class=\"line\">    updated: false</span><br><span class=\"line\">    comments: false</span><br><span class=\"line\">    link: false</span><br><span class=\"line\">    permalink: false</span><br><span class=\"line\">    excerpt: false</span><br><span class=\"line\">    categories: false</span><br><span class=\"line\">    tags: true</span><br></pre></td></tr></table></figure>\n\n<p>最后在<code>主题_config.yml</code>添加配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search: true</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-6-6-首页添加文章置顶\"><a href=\"#2-6-6-首页添加文章置顶\" class=\"headerlink\" title=\"2.6.6 首页添加文章置顶\"></a>2.6.6 首页添加文章置顶</h4><p>在根目录下打开命令行窗口安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>\n\n<p>然后在需要置顶的文章的Front-matter中加上top: true即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: BlueLake博客主题的详细配置</span><br><span class=\"line\">tags: [hexo,BlueLake]</span><br><span class=\"line\">categories: Hexo博客</span><br><span class=\"line\">top: true</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-6-7-撰写文章\"><a href=\"#2-6-7-撰写文章\" class=\"headerlink\" title=\"2.6.7 撰写文章\"></a>2.6.7 撰写文章</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post &quot;新建博客文章名&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-7-集成第三方服务\"><a href=\"#2-7-集成第三方服务\" class=\"headerlink\" title=\"2.7 集成第三方服务\"></a>2.7 集成第三方服务</h3><h4 id=\"2-7-1-添加评论\"><a href=\"#2-7-1-添加评论\" class=\"headerlink\" title=\"2.7.1 添加评论\"></a>2.7.1 添加评论</h4><p>目前主题集成多种第三方评论，比如基于Github Issue的<a href=\"https://gitalk.github.io/\">GITALK</a>），<a href=\"https://valine.js.org/\">Valine</a>评论，<a href=\"http://changyan.kuaizhan.com/\">畅言评论</a>，<a href=\"https://disqus.com/\">Disqus评论</a>、<a href=\"https://livere.com/\">来必力评论</a>、<a href=\"http://www.uyan.cc/\">友言评论</a>、<a href=\"https://gentie.163.com/info.html\">网易云跟帖评论</a>等。</p>\n<p>配置<code>主题_config.yml</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Gitalk comment</span><br><span class=\"line\">gitalk:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  owner: ## Your GitHub ID, e.g. username</span><br><span class=\"line\">  repo: ## The repository to store your comments, make sure you&#x27;re the repo&#x27;s owner, e.g. gitalk.github.io</span><br><span class=\"line\">  client_id: ## GitHub client ID, e.g. 75752dafe7907a897619</span><br><span class=\"line\">  client_secret: ## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span><br><span class=\"line\">  admin: ## Github repo owner and collaborators, only these guys can initialize github issues.</span><br><span class=\"line\">  language: &#x27;zh-CN&#x27; ## Language</span><br><span class=\"line\">  pagerDirection: last # Comment sorting direction, available values are last and first.</span><br><span class=\"line\"></span><br><span class=\"line\"># Valine comment. https://valine.js.org</span><br><span class=\"line\">valine:</span><br><span class=\"line\">  enable: false # if you want use valine,please set this value is true</span><br><span class=\"line\">  appId: # leancloud application app id</span><br><span class=\"line\">  appKey: # leancloud application app key</span><br><span class=\"line\">  notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki</span><br><span class=\"line\">  verify: false # valine verify code (true/false)</span><br><span class=\"line\">  pageSize: 10 # comment list page size</span><br><span class=\"line\">  avatar: mm # gravatar style https://valine.js.org/#/avatar</span><br><span class=\"line\">  lang: zh-cn # i18n: zh-cn/en</span><br><span class=\"line\">  placeholder: Just go go # valine comment input placeholder(like: Please leave your footprints )</span><br><span class=\"line\">  guest_info: nick,mail,link #valine comment header info</span><br><span class=\"line\"></span><br><span class=\"line\"># Changyan comment. 畅言</span><br><span class=\"line\">changyan:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  appid: ## changyan appid</span><br><span class=\"line\">  appkey: ## changyan appkey</span><br><span class=\"line\"></span><br><span class=\"line\"># Other comments</span><br><span class=\"line\">comment:</span><br><span class=\"line\">  disqus: ## disqus_shortname</span><br><span class=\"line\">  livere: ## 来必力(data-uid)</span><br><span class=\"line\">  uyan: ## 友言(uid)</span><br><span class=\"line\">  cloudTie: ## 网易云跟帖(productKey)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-7-2-站点统计\"><a href=\"#2-7-2-站点统计\" class=\"headerlink\" title=\"2.7.2 站点统计\"></a>2.7.2 站点统计</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi: true  # 卜算子阅读次数统计</span><br><span class=\"line\">baidu_analytics: # 百度统计</span><br><span class=\"line\">google_analytics: # 谷歌统计</span><br><span class=\"line\">gauges_analytics: # Gauges</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-7-2-1-卜算子阅读次数统计\"><a href=\"#2-7-2-1-卜算子阅读次数统计\" class=\"headerlink\" title=\"2.7.2.1 卜算子阅读次数统计\"></a>2.7.2.1 卜算子阅读次数统计</h5><p>若busuanzi设置为true将计算文章的阅读量，及网站的访问量与访客数，并显示在文章标题下和网站底部。</p>\n<h5 id=\"2-7-2-2-百度统计\"><a href=\"#2-7-2-2-百度统计\" class=\"headerlink\" title=\"2.7.2.2 百度统计\"></a>2.7.2.2 百度统计</h5><p>登录百度统计，定位到站点的代码获取页面。复制<code>//hm.baidu.com/hm.js?</code>后面那串统计脚本id(假设为：<code>8006843039519956000</code>)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">baidu_analytics: 8006843039519956000</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意： baidu_analytics不是你的百度id或者百度统计id，如若使用其他统计，配置方法与百度统计类似。</p>\n</blockquote>\n<p>参考链接：</p>\n","site":{"data":{}},"excerpt":"<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文记录如何搭建Hexo，并使用比较干净整洁的BlueLake主题进行渲染。综合官网教程以及自己在安装过程写下了本教程，一步一步来就可以无痛安装。</p>","more":"<h2 id=\"1-安装-Hexo\"><a href=\"#1-安装-Hexo\" class=\"headerlink\" title=\"1. 安装 Hexo\"></a>1. 安装 Hexo</h2><blockquote>\n<p>nodejs、git等安装，与github的配置略</p>\n</blockquote>\n<p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>安装以后，可以使用以下两种方式执行 Hexo：</p>\n<ol>\n<li><code>npx hexo &lt;command&gt;</code></li>\n<li>将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure>\n\n<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\">cd &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n\n<p>上传到Github配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/huangjun0210/huangjun0210.github.io.git</span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n\n<p>生成本地页面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>安装hexo-deployer-git 自动部署发布工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>生成静态页面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<p>本地文件上传到Github上面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-安装BlueLake\"><a href=\"#2-安装BlueLake\" class=\"headerlink\" title=\"2. 安装BlueLake\"></a>2. 安装BlueLake</h2><h3 id=\"2-1-安装主题\"><a href=\"#2-1-安装主题\" class=\"headerlink\" title=\"2.1 安装主题\"></a>2.1 安装主题</h3><p>在根目录下打开终端窗口：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashgit clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/bluelake</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-安装主题插件\"><a href=\"#2-2-安装主题插件\" class=\"headerlink\" title=\"2.2 安装主题插件\"></a>2.2 安装主题插件</h3><p>在根目录下打开终端窗口：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashnpm install hexo-renderer-jade --save</span><br><span class=\"line\">npm install hexo-renderer-stylus --save</span><br><span class=\"line\">npm install hexo-generator-feed --save</span><br><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-启用主题\"><a href=\"#2-3-启用主题\" class=\"headerlink\" title=\"2.3 启用主题\"></a>2.3 启用主题</h3><p>打开<code>_config.yml</code>配置文件，找到theme字段，将其值改为<code>bluelake</code>(先确认主题文件夹名称是否为bluelake)。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: bluelake</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-验证\"><a href=\"#2-4-验证\" class=\"headerlink\" title=\"2.4 验证\"></a>2.4 验证</h3><p>首先启动 Hexo 本地站点，并开启调试模式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashhexo s --debug</span><br></pre></td></tr></table></figure>\n\n<p>在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：<code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code><br>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p>\n<h3 id=\"2-5-更新主题\"><a href=\"#2-5-更新主题\" class=\"headerlink\" title=\"2.5 更新主题\"></a>2.5 更新主题</h3><p>今后若主题添加了新功能正是您需要的，您可以直接<code>git pull</code>来更新主题。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashcd themes/bluelake</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-6-配置\"><a href=\"#2-6-配置\" class=\"headerlink\" title=\"2.6 配置\"></a>2.6 配置</h3><h4 id=\"2-6-1-配置网站头部显示文字\"><a href=\"#2-6-1-配置网站头部显示文字\" class=\"headerlink\" title=\"2.6.1  配置网站头部显示文字\"></a>2.6.1  配置网站头部显示文字</h4><p>打开<code>_config.yml</code>，找到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title:     # 标题，如：秋过冬漫长</span><br><span class=\"line\">subtitle:  # 副标题，如：没有比脚更长的路，走过去，前面是个天！</span><br><span class=\"line\">description: # 网站关键字，如：key, key1, key2, key3</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">author:</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>title</code>和<code>subtitle</code>分别是网站主标题和副标题，会显示在网站头部；</li>\n<li><code>description</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；</li>\n<li><code>keywords</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；</li>\n<li><code>author</code>就填写网站所有者的名字，会在网站底部的<code>Copyright</code>处有所显示。</li>\n</ul>\n<h4 id=\"2-6-2-设置语言\"><a href=\"#2-6-2-设置语言\" class=\"headerlink\" title=\"2.6.2 设置语言\"></a>2.6.2 设置语言</h4><p>该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在<code>根_config.yml</code>配置如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-CN</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-6-3-设置菜单\"><a href=\"#2-6-3-设置菜单\" class=\"headerlink\" title=\"2.6.3 设置菜单\"></a>2.6.3 设置菜单</h4><p>打开<code>主题_config.yml</code>，找到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  - page: home</span><br><span class=\"line\">    directory: .</span><br><span class=\"line\">    icon: fa-home</span><br><span class=\"line\">  - page: archive</span><br><span class=\"line\">    directory: archives/</span><br><span class=\"line\">    icon: fa-archive</span><br><span class=\"line\">  # - page: about</span><br><span class=\"line\">  #   directory: about/</span><br><span class=\"line\">  #   icon: fa-user</span><br><span class=\"line\">  - page: rss</span><br><span class=\"line\">    directory: atom.xml</span><br><span class=\"line\">    icon: fa-rss</span><br></pre></td></tr></table></figure>\n\n<p>主题默认是展示四个菜单，即<code>主页home</code>，<code>归档archive</code>，<code>关于about</code>，<code>订阅RSS</code>；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。</p>\n<h4 id=\"2-6-4-添加about页\"><a href=\"#2-6-4-添加about页\" class=\"headerlink\" title=\"2.6.4 添加about页\"></a>2.6.4 添加about页</h4><p>此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &#x27;about&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>打开<code>主题_config.yml</code>，补全about页面的详细信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">about:</span><br><span class=\"line\">  photo_url: # 头像的链接地址 e.g. http://cdn.itdn.top/blog/themeauthor.jpg</span><br><span class=\"line\">  items:</span><br><span class=\"line\">  - label: email # 个人邮箱</span><br><span class=\"line\">    url: ## Your email with mailto: e.g.  mailto:zhenggchaoo@gmail.com</span><br><span class=\"line\">    title: ## Your email e.g.  zhenggchaoo@gmail.com</span><br><span class=\"line\">  - label: github # github</span><br><span class=\"line\">    url: ## Your github&#x27;url e.g.  https://github.com/chaooo</span><br><span class=\"line\">    title: ## Your github&#x27;name e.g.  chaooo</span><br><span class=\"line\">  - label: weibo # 微博</span><br><span class=\"line\">    url: ## Your weibo&#x27;s url e.g.  http://weibo.com/zhengchaooo</span><br><span class=\"line\">    title: ## Your weibo&#x27;s name e.g.  秋过冬漫长</span><br></pre></td></tr></table></figure>\n\n<p>当然您也可以自定义重新布局about页面，只需要修改<code>layout/page.jade</code>模板就好。</p>\n<h4 id=\"2-6-5-添加本地搜索\"><a href=\"#2-6-5-添加本地搜索\" class=\"headerlink\" title=\"2.6.5 添加本地搜索\"></a>2.6.5 添加本地搜索</h4><p>默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件<a href=\"https://github.com/alexbruno/hexo-generator-json-content\">hexo-generator-json-content</a>来创建JSON数据文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bashnpm install hexo-generator-json-content@2.2.0 --save</span><br></pre></td></tr></table></figure>\n\n<p>然后在<code>根_config.yml</code>添加配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonContent:</span><br><span class=\"line\">  meta: false</span><br><span class=\"line\">  pages: false</span><br><span class=\"line\">  posts:</span><br><span class=\"line\">    title: true</span><br><span class=\"line\">    date: true</span><br><span class=\"line\">    path: true</span><br><span class=\"line\">    text: true</span><br><span class=\"line\">    raw: false</span><br><span class=\"line\">    content: false</span><br><span class=\"line\">    slug: false</span><br><span class=\"line\">    updated: false</span><br><span class=\"line\">    comments: false</span><br><span class=\"line\">    link: false</span><br><span class=\"line\">    permalink: false</span><br><span class=\"line\">    excerpt: false</span><br><span class=\"line\">    categories: false</span><br><span class=\"line\">    tags: true</span><br></pre></td></tr></table></figure>\n\n<p>最后在<code>主题_config.yml</code>添加配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search: true</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-6-6-首页添加文章置顶\"><a href=\"#2-6-6-首页添加文章置顶\" class=\"headerlink\" title=\"2.6.6 首页添加文章置顶\"></a>2.6.6 首页添加文章置顶</h4><p>在根目录下打开命令行窗口安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>\n\n<p>然后在需要置顶的文章的Front-matter中加上top: true即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: BlueLake博客主题的详细配置</span><br><span class=\"line\">tags: [hexo,BlueLake]</span><br><span class=\"line\">categories: Hexo博客</span><br><span class=\"line\">top: true</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-6-7-撰写文章\"><a href=\"#2-6-7-撰写文章\" class=\"headerlink\" title=\"2.6.7 撰写文章\"></a>2.6.7 撰写文章</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post &quot;新建博客文章名&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-7-集成第三方服务\"><a href=\"#2-7-集成第三方服务\" class=\"headerlink\" title=\"2.7 集成第三方服务\"></a>2.7 集成第三方服务</h3><h4 id=\"2-7-1-添加评论\"><a href=\"#2-7-1-添加评论\" class=\"headerlink\" title=\"2.7.1 添加评论\"></a>2.7.1 添加评论</h4><p>目前主题集成多种第三方评论，比如基于Github Issue的<a href=\"https://gitalk.github.io/\">GITALK</a>），<a href=\"https://valine.js.org/\">Valine</a>评论，<a href=\"http://changyan.kuaizhan.com/\">畅言评论</a>，<a href=\"https://disqus.com/\">Disqus评论</a>、<a href=\"https://livere.com/\">来必力评论</a>、<a href=\"http://www.uyan.cc/\">友言评论</a>、<a href=\"https://gentie.163.com/info.html\">网易云跟帖评论</a>等。</p>\n<p>配置<code>主题_config.yml</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Gitalk comment</span><br><span class=\"line\">gitalk:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  owner: ## Your GitHub ID, e.g. username</span><br><span class=\"line\">  repo: ## The repository to store your comments, make sure you&#x27;re the repo&#x27;s owner, e.g. gitalk.github.io</span><br><span class=\"line\">  client_id: ## GitHub client ID, e.g. 75752dafe7907a897619</span><br><span class=\"line\">  client_secret: ## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span><br><span class=\"line\">  admin: ## Github repo owner and collaborators, only these guys can initialize github issues.</span><br><span class=\"line\">  language: &#x27;zh-CN&#x27; ## Language</span><br><span class=\"line\">  pagerDirection: last # Comment sorting direction, available values are last and first.</span><br><span class=\"line\"></span><br><span class=\"line\"># Valine comment. https://valine.js.org</span><br><span class=\"line\">valine:</span><br><span class=\"line\">  enable: false # if you want use valine,please set this value is true</span><br><span class=\"line\">  appId: # leancloud application app id</span><br><span class=\"line\">  appKey: # leancloud application app key</span><br><span class=\"line\">  notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki</span><br><span class=\"line\">  verify: false # valine verify code (true/false)</span><br><span class=\"line\">  pageSize: 10 # comment list page size</span><br><span class=\"line\">  avatar: mm # gravatar style https://valine.js.org/#/avatar</span><br><span class=\"line\">  lang: zh-cn # i18n: zh-cn/en</span><br><span class=\"line\">  placeholder: Just go go # valine comment input placeholder(like: Please leave your footprints )</span><br><span class=\"line\">  guest_info: nick,mail,link #valine comment header info</span><br><span class=\"line\"></span><br><span class=\"line\"># Changyan comment. 畅言</span><br><span class=\"line\">changyan:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  appid: ## changyan appid</span><br><span class=\"line\">  appkey: ## changyan appkey</span><br><span class=\"line\"></span><br><span class=\"line\"># Other comments</span><br><span class=\"line\">comment:</span><br><span class=\"line\">  disqus: ## disqus_shortname</span><br><span class=\"line\">  livere: ## 来必力(data-uid)</span><br><span class=\"line\">  uyan: ## 友言(uid)</span><br><span class=\"line\">  cloudTie: ## 网易云跟帖(productKey)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-7-2-站点统计\"><a href=\"#2-7-2-站点统计\" class=\"headerlink\" title=\"2.7.2 站点统计\"></a>2.7.2 站点统计</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi: true  # 卜算子阅读次数统计</span><br><span class=\"line\">baidu_analytics: # 百度统计</span><br><span class=\"line\">google_analytics: # 谷歌统计</span><br><span class=\"line\">gauges_analytics: # Gauges</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-7-2-1-卜算子阅读次数统计\"><a href=\"#2-7-2-1-卜算子阅读次数统计\" class=\"headerlink\" title=\"2.7.2.1 卜算子阅读次数统计\"></a>2.7.2.1 卜算子阅读次数统计</h5><p>若busuanzi设置为true将计算文章的阅读量，及网站的访问量与访客数，并显示在文章标题下和网站底部。</p>\n<h5 id=\"2-7-2-2-百度统计\"><a href=\"#2-7-2-2-百度统计\" class=\"headerlink\" title=\"2.7.2.2 百度统计\"></a>2.7.2.2 百度统计</h5><p>登录百度统计，定位到站点的代码获取页面。复制<code>//hm.baidu.com/hm.js?</code>后面那串统计脚本id(假设为：<code>8006843039519956000</code>)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">baidu_analytics: 8006843039519956000</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意： baidu_analytics不是你的百度id或者百度统计id，如若使用其他统计，配置方法与百度统计类似。</p>\n</blockquote>\n<p>参考链接：</p>"},{"title":"vagrant环境搭建","date":"2022-11-06T09:21:43.000Z","_content":"\nvagrant支持的provider包括virtualbox、hyperv、libvirt等。\n\nvirtualbox支持windows、linux、masoc的安装，因此本教程以virtualbox作为provider。\n\n<!--more-->\n\n## 1. 安装virtualbox\n\n点击进入[官网](https://www.virtualbox.org/wiki/Downloads)下载virtualbox\n\n\n\n![virtualbox](vagrant环境搭建/virtualbox.png)\n\n此处可选择操作系统版本，选择Windows版本下载、安装(其他操作系统类似)。\n\n安装过程比较简单，跟着指引即可。\n\n## 2. 安装vagrant\n\n点击进入[官网](https://developer.hashicorp.com/vagrant/downloads)下载vagrant\n\n![img](vagrant环境搭建/vagrant.png)\n\n这里选择Windows 64位版本，安装过程跟着指引即可。\n\n## 3. vagrant基本操作\n\n```Bash\n# 新建虚拟机，创建一个centos7虚拟机\n\n# 初始化\nvagrant init centos/7\n\n# 启动，初次启动会比较慢，需要拉镜像\nvagrant up\n\n# 查看状态\nvagrant status\n\n# ssh到虚机\n vagrant ssh\n \n # 停止虚机\n vagrant halt\n \n # 暂停虚机\n vagrant suspend\n \n # 恢复虚机\n vagrant resume\n \n # 删除虚机\n vagrant destroy\n```\n\n> 相关链接\n\n1. virtualbox官方下载地址：https://www.virtualbox.org/wiki/Downloads\n2. vagrant官方下载地址：https://developer.hashicorp.com/vagrant/downloads\n3. vagrant官方文档：https://developer.hashicorp.com/vagrant/docs\n4. vagrant box官方地址：https://app.vagrantup.com/boxes/search","source":"_posts/vagrant环境搭建.md","raw":"---\ntitle: vagrant环境搭建\ndate: 2022-11-06 17:21:43\ntags: [Vagrant, slurm, scow]\ncategories: Vagrant\n---\n\nvagrant支持的provider包括virtualbox、hyperv、libvirt等。\n\nvirtualbox支持windows、linux、masoc的安装，因此本教程以virtualbox作为provider。\n\n<!--more-->\n\n## 1. 安装virtualbox\n\n点击进入[官网](https://www.virtualbox.org/wiki/Downloads)下载virtualbox\n\n\n\n![virtualbox](vagrant环境搭建/virtualbox.png)\n\n此处可选择操作系统版本，选择Windows版本下载、安装(其他操作系统类似)。\n\n安装过程比较简单，跟着指引即可。\n\n## 2. 安装vagrant\n\n点击进入[官网](https://developer.hashicorp.com/vagrant/downloads)下载vagrant\n\n![img](vagrant环境搭建/vagrant.png)\n\n这里选择Windows 64位版本，安装过程跟着指引即可。\n\n## 3. vagrant基本操作\n\n```Bash\n# 新建虚拟机，创建一个centos7虚拟机\n\n# 初始化\nvagrant init centos/7\n\n# 启动，初次启动会比较慢，需要拉镜像\nvagrant up\n\n# 查看状态\nvagrant status\n\n# ssh到虚机\n vagrant ssh\n \n # 停止虚机\n vagrant halt\n \n # 暂停虚机\n vagrant suspend\n \n # 恢复虚机\n vagrant resume\n \n # 删除虚机\n vagrant destroy\n```\n\n> 相关链接\n\n1. virtualbox官方下载地址：https://www.virtualbox.org/wiki/Downloads\n2. vagrant官方下载地址：https://developer.hashicorp.com/vagrant/downloads\n3. vagrant官方文档：https://developer.hashicorp.com/vagrant/docs\n4. vagrant box官方地址：https://app.vagrantup.com/boxes/search","slug":"vagrant环境搭建","published":1,"updated":"2022-11-06T09:51:53.596Z","_id":"cla55nu0200044g6w0ck44e78","comments":1,"layout":"post","photos":[],"link":"","content":"<p>vagrant支持的provider包括virtualbox、hyperv、libvirt等。</p>\n<p>virtualbox支持windows、linux、masoc的安装，因此本教程以virtualbox作为provider。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"1-安装virtualbox\"><a href=\"#1-安装virtualbox\" class=\"headerlink\" title=\"1. 安装virtualbox\"></a>1. 安装virtualbox</h2><p>点击进入<a href=\"https://www.virtualbox.org/wiki/Downloads\">官网</a>下载virtualbox</p>\n<p><img src=\"/2022/11/06/vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/virtualbox.png\" alt=\"virtualbox\"></p>\n<p>此处可选择操作系统版本，选择Windows版本下载、安装(其他操作系统类似)。</p>\n<p>安装过程比较简单，跟着指引即可。</p>\n<h2 id=\"2-安装vagrant\"><a href=\"#2-安装vagrant\" class=\"headerlink\" title=\"2. 安装vagrant\"></a>2. 安装vagrant</h2><p>点击进入<a href=\"https://developer.hashicorp.com/vagrant/downloads\">官网</a>下载vagrant</p>\n<p><img src=\"/2022/11/06/vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/vagrant.png\" alt=\"img\"></p>\n<p>这里选择Windows 64位版本，安装过程跟着指引即可。</p>\n<h2 id=\"3-vagrant基本操作\"><a href=\"#3-vagrant基本操作\" class=\"headerlink\" title=\"3. vagrant基本操作\"></a>3. vagrant基本操作</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建虚拟机，创建一个centos7虚拟机</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">vagrant init centos/7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动，初次启动会比较慢，需要拉镜像</span></span><br><span class=\"line\">vagrant up</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">vagrant status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ssh到虚机</span></span><br><span class=\"line\"> vagrant ssh</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 停止虚机</span></span><br><span class=\"line\"> vagrant halt</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 暂停虚机</span></span><br><span class=\"line\"> vagrant <span class=\"built_in\">suspend</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 恢复虚机</span></span><br><span class=\"line\"> vagrant resume</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 删除虚机</span></span><br><span class=\"line\"> vagrant destroy</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>相关链接</p>\n</blockquote>\n<ol>\n<li>virtualbox官方下载地址：<a href=\"https://www.virtualbox.org/wiki/Downloads\">https://www.virtualbox.org/wiki/Downloads</a></li>\n<li>vagrant官方下载地址：<a href=\"https://developer.hashicorp.com/vagrant/downloads\">https://developer.hashicorp.com/vagrant/downloads</a></li>\n<li>vagrant官方文档：<a href=\"https://developer.hashicorp.com/vagrant/docs\">https://developer.hashicorp.com/vagrant/docs</a></li>\n<li>vagrant box官方地址：<a href=\"https://app.vagrantup.com/boxes/search\">https://app.vagrantup.com/boxes/search</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>vagrant支持的provider包括virtualbox、hyperv、libvirt等。</p>\n<p>virtualbox支持windows、linux、masoc的安装，因此本教程以virtualbox作为provider。</p>","more":"<h2 id=\"1-安装virtualbox\"><a href=\"#1-安装virtualbox\" class=\"headerlink\" title=\"1. 安装virtualbox\"></a>1. 安装virtualbox</h2><p>点击进入<a href=\"https://www.virtualbox.org/wiki/Downloads\">官网</a>下载virtualbox</p>\n<p><img src=\"/2022/11/06/vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/virtualbox.png\" alt=\"virtualbox\"></p>\n<p>此处可选择操作系统版本，选择Windows版本下载、安装(其他操作系统类似)。</p>\n<p>安装过程比较简单，跟着指引即可。</p>\n<h2 id=\"2-安装vagrant\"><a href=\"#2-安装vagrant\" class=\"headerlink\" title=\"2. 安装vagrant\"></a>2. 安装vagrant</h2><p>点击进入<a href=\"https://developer.hashicorp.com/vagrant/downloads\">官网</a>下载vagrant</p>\n<p><img src=\"/2022/11/06/vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/vagrant.png\" alt=\"img\"></p>\n<p>这里选择Windows 64位版本，安装过程跟着指引即可。</p>\n<h2 id=\"3-vagrant基本操作\"><a href=\"#3-vagrant基本操作\" class=\"headerlink\" title=\"3. vagrant基本操作\"></a>3. vagrant基本操作</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建虚拟机，创建一个centos7虚拟机</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">vagrant init centos/7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动，初次启动会比较慢，需要拉镜像</span></span><br><span class=\"line\">vagrant up</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">vagrant status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ssh到虚机</span></span><br><span class=\"line\"> vagrant ssh</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 停止虚机</span></span><br><span class=\"line\"> vagrant halt</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 暂停虚机</span></span><br><span class=\"line\"> vagrant <span class=\"built_in\">suspend</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 恢复虚机</span></span><br><span class=\"line\"> vagrant resume</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 删除虚机</span></span><br><span class=\"line\"> vagrant destroy</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>相关链接</p>\n</blockquote>\n<ol>\n<li>virtualbox官方下载地址：<a href=\"https://www.virtualbox.org/wiki/Downloads\">https://www.virtualbox.org/wiki/Downloads</a></li>\n<li>vagrant官方下载地址：<a href=\"https://developer.hashicorp.com/vagrant/downloads\">https://developer.hashicorp.com/vagrant/downloads</a></li>\n<li>vagrant官方文档：<a href=\"https://developer.hashicorp.com/vagrant/docs\">https://developer.hashicorp.com/vagrant/docs</a></li>\n<li>vagrant box官方地址：<a href=\"https://app.vagrantup.com/boxes/search\">https://app.vagrantup.com/boxes/search</a></li>\n</ol>"}],"PostAsset":[{"_id":"source/_posts/vagrant环境搭建/vagrant.png","slug":"vagrant.png","post":"cla55nu0200044g6w0ck44e78","modified":0,"renderable":0},{"_id":"source/_posts/vagrant环境搭建/virtualbox.png","slug":"virtualbox.png","post":"cla55nu0200044g6w0ck44e78","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cla18w0m100078cvedyd055x2","category_id":"cla18w0m300088cve3jfr6ti3","_id":"cla18w0m4000b8cveestr8pu9"},{"post_id":"cla18w0lj00018cve74uh0xtu","category_id":"cla55ntzx00004g6w6npoe8dw","_id":"cla55nu0000034g6w7n5m5aqg"},{"post_id":"cla55nu0200044g6w0ck44e78","category_id":"cla55nu0300054g6whr5w7zxs","_id":"cla55nu0500084g6w1a2b22eh"}],"PostTag":[{"post_id":"cla18w0m100078cvedyd055x2","tag_id":"cla18w0m300098cvedjco3aia","_id":"cla18w0m5000c8cve0ri65w2a"},{"post_id":"cla18w0m100078cvedyd055x2","tag_id":"cla18w0m4000a8cvee1lqa5p3","_id":"cla18w0m5000d8cvegum5hrk9"},{"post_id":"cla18w0lj00018cve74uh0xtu","tag_id":"cla55ntzz00014g6w1y0z1cfh","_id":"cla55nu0000024g6wg1mrezoj"},{"post_id":"cla55nu0200044g6w0ck44e78","tag_id":"cla55nu0400064g6wextad06f","_id":"cla55nu06000a4g6wf9qu0qlf"},{"post_id":"cla55nu0200044g6w0ck44e78","tag_id":"cla55nu0400074g6w05tq7q7r","_id":"cla55nu06000b4g6wb73fgon5"},{"post_id":"cla55nu0200044g6w0ck44e78","tag_id":"cla55nu0500094g6w1n3x8kg7","_id":"cla55nu06000c4g6wdn9l4gr6"}],"Tag":[{"name":"Java","_id":"cla18w0lu00048cve8h2h0p2b"},{"name":"hexo","_id":"cla18w0m300098cvedjco3aia"},{"name":"BlueLake","_id":"cla18w0m4000a8cvee1lqa5p3"},{"name":"面试","_id":"cla55ntzz00014g6w1y0z1cfh"},{"name":"Vagrant","_id":"cla55nu0400064g6wextad06f"},{"name":"slurm","_id":"cla55nu0400074g6w05tq7q7r"},{"name":"scow","_id":"cla55nu0500094g6w1n3x8kg7"}]}}